

@warning gas_product.threhold_quantity: word 'threhold' seems not found in library
@warning object definition: event_tbd: word 'tbd' seems not found in library
@warning object definition: keypair_identity: word 'keypair' seems not found in library



=================1.0 Execute Report (Model Time 201128T1735) @Sat Nov 28 17:40:49 CST 2020, 91 objects and 640 fields===========================
from file "/works/jobs/xt20_v1/workspace/web-code-generator/sky/modeling/microservice/xt20.xml"


 processing: mobile_app


 processing: page


 processing: page_type


 processing: slide


 processing: ui_action


 processing: section


 processing: user_domain


 processing: user_allow_list


 processing: sec_user


 processing: user_app


 processing: quick_link


 processing: list_access


 processing: login_history


 processing: candidate_container


 processing: candidate_element


 processing: wechat_workapp_identity


 processing: wechat_miniapp_identity


 processing: keypair_identity


 processing: public_key_type


 processing: tree_node


 processing: platform


 processing: province


 processing: province.platform.platform

Info: Add virtual field [provinces(es)] to <platform>
	province.platform


 processing: city


 processing: city.province.province

Info: Add virtual field [citys(es)] to <province>
	city.province


 processing: city.platform.platform

Info: Add virtual field [citys(es)] to <platform>
	city.platform


 processing: district


 processing: district.city.city

Info: Add virtual field [districts(es)] to <city>
	district.city


 processing: district.platform.platform

Info: Add virtual field [districts(es)] to <platform>
	district.platform


 processing: role


 processing: role.platform.platform

Info: Add virtual field [roles(es)] to <platform>
	role.platform


 processing: employee_status


 processing: employee_status.platform.platform

Info: Add virtual field [employee_statuss(es)] to <platform>
	employee_status.platform


 processing: invitation_type


 processing: invitation_type.platform.platform

Info: Add virtual field [invitation_types(es)] to <platform>
	invitation_type.platform


 processing: off_time


 processing: off_time.platform.platform

Info: Add virtual field [off_times(es)] to <platform>
	off_time.platform


 processing: merchant


 processing: merchant.off_time.off_time

Info: Add virtual field [merchants(es)] to <off_time>
	merchant.off_time


 processing: merchant.platform.platform

Info: Add virtual field [merchants(es)] to <platform>
	merchant.platform


 processing: personal_user


 processing: personal_user.platform.platform

Info: Add virtual field [personal_users(es)] to <platform>
	personal_user.platform


 processing: individual_identity


 processing: individual_identity.personal_user.personal_user

Info: Add virtual field [individual_identitys(es)] to <personal_user>
	individual_identity.personal_user


 processing: user_working_info


 processing: user_working_info.personal_user.user

Info: Add virtual field [user_working_infos(es)] to <personal_user>
	user_working_info.user


 processing: user_working_info.employee.employee

Info: Add virtual field [user_working_infos(es)] to <employee>
	user_working_info.employee


 processing: organization_identity


 processing: organization_identity.merchant.merchant

Info: Add virtual field [organization_identitys(es)] to <merchant>
	organization_identity.merchant


 processing: organization_identity.platform.platform

Info: Add virtual field [organization_identitys(es)] to <platform>
	organization_identity.platform


 processing: warehouse


 processing: warehouse.merchant.merchant

Info: Add virtual field [warehouses(es)] to <merchant>
	warehouse.merchant


 processing: invitation_record


 processing: invitation_record.employee.inviter

Info: Add virtual field [invitation_records(es)] to <employee>
	invitation_record.inviter


 processing: invitation_record.employee.invitee

Info: Add virtual field [invitation_records(es)] to <employee>
	invitation_record.invitee


 processing: invitation_record.invitation_type.type

Info: Add virtual field [invitation_records(es)] to <invitation_type>
	invitation_record.type


 processing: employee


 processing: employee.personal_user.person_information

Info: Add virtual field [employees(es)] to <personal_user>
	employee.person_information


 processing: employee.merchant.merchant

Info: Add virtual field [employees(es)] to <merchant>
	employee.merchant


 processing: employee.role.role

Info: Add virtual field [employees(es)] to <role>
	employee.role


 processing: employee.employee_status.status

Info: Add virtual field [employees(es)] to <employee_status>
	employee.status


 processing: employee.platform.platform

Info: Add virtual field [employees(es)] to <platform>
	employee.platform


 processing: supply_relationship


 processing: supply_relationship.merchant.supplier

Info: Add virtual field [supply_relationships(es)] to <merchant>
	supply_relationship.supplier


 processing: supply_relationship.merchant.customer

Info: Add virtual field [supply_relationships(es)] to <merchant>
	supply_relationship.customer


 processing: gas_container


 processing: gas_container.platform.platform

Info: Add virtual field [gas_containers(es)] to <platform>
	gas_container.platform


 processing: fill_medium


 processing: fill_medium.platform.platform

Info: Add virtual field [fill_mediums(es)] to <platform>
	fill_medium.platform


 processing: nominal_volume


 processing: nominal_volume.platform.platform

Info: Add virtual field [nominal_volumes(es)] to <platform>
	nominal_volume.platform


 processing: fill_volume


 processing: fill_volume.platform.platform

Info: Add virtual field [fill_volumes(es)] to <platform>
	fill_volume.platform


 processing: nominal_pressure


 processing: nominal_pressure.platform.platform

Info: Add virtual field [nominal_pressures(es)] to <platform>
	nominal_pressure.platform


 processing: gas_container_category


 processing: gas_container_category.platform.platform

Info: Add virtual field [gas_container_categorys(es)] to <platform>
	gas_container_category.platform


 processing: gas_component


 processing: gas_component.platform.platform

Info: Add virtual field [gas_components(es)] to <platform>
	gas_component.platform


 processing: check_status


 processing: check_status.platform.platform

Info: Add virtual field [check_statuss(es)] to <platform>
	check_status.platform


 processing: action_type


 processing: action_type.platform.platform

Info: Add virtual field [action_types(es)] to <platform>
	action_type.platform


 processing: product_status


 processing: product_status.platform.platform

Info: Add virtual field [product_statuss(es)] to <platform>
	product_status.platform


 processing: order_status


 processing: order_status.platform.platform

Info: Add virtual field [order_statuss(es)] to <platform>
	order_status.platform


 processing: deliver_type


 processing: deliver_type.platform.platform

Info: Add virtual field [deliver_types(es)] to <platform>
	deliver_type.platform


 processing: shipping_status


 processing: shipping_status.platform.platform

Info: Add virtual field [shipping_statuss(es)] to <platform>
	shipping_status.platform


 processing: deliver_task_status


 processing: deliver_task_status.platform.platform

Info: Add virtual field [deliver_task_statuss(es)] to <platform>
	deliver_task_status.platform


 processing: delivery_receipt_status


 processing: delivery_receipt_status.platform.platform

Info: Add virtual field [delivery_receipt_statuss(es)] to <platform>
	delivery_receipt_status.platform


 processing: gas_cylinder


 processing: gas_cylinder.gas_container.gas_container

Info: Add virtual field [gas_cylinders(es)] to <gas_container>
	gas_cylinder.gas_container


 processing: gas_cylinder.fill_medium.fill_medium

Info: Add virtual field [gas_cylinders(es)] to <fill_medium>
	gas_cylinder.fill_medium


 processing: gas_cylinder.nominal_pressure.nominal_pressure

Info: Add virtual field [gas_cylinders(es)] to <nominal_pressure>
	gas_cylinder.nominal_pressure


 processing: gas_cylinder.nominal_volume.nominal_volume

Info: Add virtual field [gas_cylinders(es)] to <nominal_volume>
	gas_cylinder.nominal_volume


 processing: gas_cylinder.gas_container_category.gas_container_category

Info: Add virtual field [gas_cylinders(es)] to <gas_container_category>
	gas_cylinder.gas_container_category


 processing: gas_cylinder.platform.platform

Info: Add virtual field [gas_cylinders(es)] to <platform>
	gas_cylinder.platform


 processing: merchant_cylinder


 processing: merchant_cylinder.gas_cylinder.cylinder

Info: Add virtual field [merchant_cylinders(es)] to <gas_cylinder>
	merchant_cylinder.cylinder


 processing: merchant_cylinder.merchant.merchant

Info: Add virtual field [merchant_cylinders(es)] to <merchant>
	merchant_cylinder.merchant


 processing: merchant_cylinder_record


 processing: merchant_cylinder_record.merchant.merchant

Info: Add virtual field [merchant_cylinder_records(es)] to <merchant>
	merchant_cylinder_record.merchant


 processing: merchant_cylinder_record.gas_cylinder.cylinder

Info: Add virtual field [merchant_cylinder_records(es)] to <gas_cylinder>
	merchant_cylinder_record.cylinder


 processing: merchant_cylinder_record.employee.actor

Info: Add virtual field [merchant_cylinder_records(es)] to <employee>
	merchant_cylinder_record.actor


 processing: merchant_cylinder_record.action_type.action

Info: Add virtual field [merchant_cylinder_records(es)] to <action_type>
	merchant_cylinder_record.action


 processing: customer_cylinder


 processing: customer_cylinder.gas_cylinder.cylinder

Info: Add virtual field [customer_cylinders(es)] to <gas_cylinder>
	customer_cylinder.cylinder


 processing: customer_cylinder.merchant.seller

Info: Add virtual field [customer_cylinders(es)] to <merchant>
	customer_cylinder.seller


 processing: customer_cylinder.merchant.customer

Info: Add virtual field [customer_cylinders(es)] to <merchant>
	customer_cylinder.customer


 processing: customer_cylinder.check_status.status

Info: Add virtual field [customer_cylinders(es)] to <check_status>
	customer_cylinder.status


 processing: customer_cylinder_record


 processing: customer_cylinder_record.gas_cylinder.cylinder

Info: Add virtual field [customer_cylinder_records(es)] to <gas_cylinder>
	customer_cylinder_record.cylinder


 processing: customer_cylinder_record.merchant.seller

Info: Add virtual field [customer_cylinder_records(es)] to <merchant>
	customer_cylinder_record.seller


 processing: customer_cylinder_record.merchant.customer

Info: Add virtual field [customer_cylinder_records(es)] to <merchant>
	customer_cylinder_record.customer


 processing: customer_cylinder_record.employee.actor

Info: Add virtual field [customer_cylinder_records(es)] to <employee>
	customer_cylinder_record.actor


 processing: customer_cylinder_record.action_type.action

Info: Add virtual field [customer_cylinder_records(es)] to <action_type>
	customer_cylinder_record.action


 processing: customer_cylinder_record_evidence


 processing: customer_cylinder_record_evidence.customer_cylinder_record.record

Info: Add virtual field [customer_cylinder_record_evidences(es)] to <customer_cylinder_record>
	customer_cylinder_record_evidence.record


 processing: customer_cylinder_record_evidence.employee.actor

Info: Add virtual field [customer_cylinder_record_evidences(es)] to <employee>
	customer_cylinder_record_evidence.actor


 processing: gas_product_template


 processing: gas_product_template.gas_cylinder.cylinder

Info: Add virtual field [gas_product_templates(es)] to <gas_cylinder>
	gas_product_template.cylinder


 processing: gas_product_template.fill_volume.fill_volume

Info: Add virtual field [gas_product_templates(es)] to <fill_volume>
	gas_product_template.fill_volume


 processing: gas_product_template.platform.platform

Info: Add virtual field [gas_product_templates(es)] to <platform>
	gas_product_template.platform


 processing: gas_product_template_component


 processing: gas_product_template_component.gas_component.component

Info: Add virtual field [gas_product_template_components(es)] to <gas_component>
	gas_product_template_component.component


 processing: gas_product_template_component.gas_product_template.product_template

Info: Add virtual field [gas_product_template_components(es)] to <gas_product_template>
	gas_product_template_component.product_template


 processing: gas_product


 processing: gas_product.gas_cylinder.cylinder

Info: Add virtual field [gas_products(es)] to <gas_cylinder>
	gas_product.cylinder


 processing: gas_product.fill_volume.fill_volume

Info: Add virtual field [gas_products(es)] to <fill_volume>
	gas_product.fill_volume


 processing: gas_product.gas_product_template.template

Info: Add virtual field [gas_products(es)] to <gas_product_template>
	gas_product.template


 processing: gas_product.product_status.status

Info: Add virtual field [gas_products(es)] to <product_status>
	gas_product.status


 processing: gas_product.merchant.merchant

Info: Add virtual field [gas_products(es)] to <merchant>
	gas_product.merchant


 processing: gas_product.platform.platform

Info: Add virtual field [gas_products(es)] to <platform>
	gas_product.platform


 processing: gas_product_component


 processing: gas_product_component.gas_component.component

Info: Add virtual field [gas_product_components(es)] to <gas_component>
	gas_product_component.component


 processing: gas_product_component.gas_product.product

Info: Add virtual field [gas_product_components(es)] to <gas_product>
	gas_product_component.product


 processing: gas_product_inventory_record


 processing: gas_product_inventory_record.merchant.merchant

Info: Add virtual field [gas_product_inventory_records(es)] to <merchant>
	gas_product_inventory_record.merchant


 processing: gas_product_inventory_record.gas_product.product

Info: Add virtual field [gas_product_inventory_records(es)] to <gas_product>
	gas_product_inventory_record.product


 processing: gas_product_inventory_record.employee.actor

Info: Add virtual field [gas_product_inventory_records(es)] to <employee>
	gas_product_inventory_record.actor


 processing: gas_product_inventory_record.action_type.action

Info: Add virtual field [gas_product_inventory_records(es)] to <action_type>
	gas_product_inventory_record.action


 processing: gas_product_cache


 processing: gas_product_template_cache


 processing: deliver_task


 processing: deliver_task.personal_user.deliver_staff

Info: Add virtual field [deliver_tasks(es)] to <personal_user>
	deliver_task.deliver_staff


 processing: deliver_task.merchant.merchant

Info: Add virtual field [deliver_tasks(es)] to <merchant>
	deliver_task.merchant


 processing: deliver_task.deliver_task_status.status

Info: Add virtual field [deliver_tasks(es)] to <deliver_task_status>
	deliver_task.status


 processing: main_order


 processing: main_order.merchant.buyer

Info: Add virtual field [main_orders(es)] to <merchant>
	main_order.buyer


 processing: main_order.merchant.seller

Info: Add virtual field [main_orders(es)] to <merchant>
	main_order.seller


 processing: main_order.order_status.status

Info: Add virtual field [main_orders(es)] to <order_status>
	main_order.status


 processing: main_order.personal_user.creator

Info: Add virtual field [main_orders(es)] to <personal_user>
	main_order.creator


 processing: gas_line_item


 processing: gas_line_item.gas_cylinder.cylinder

Info: Add virtual field [gas_line_items(es)] to <gas_cylinder>
	gas_line_item.cylinder


 processing: gas_line_item.gas_product.product

Info: Add virtual field [gas_line_items(es)] to <gas_product>
	gas_line_item.product


 processing: gas_line_item.gas_product_template.template

Info: Add virtual field [gas_line_items(es)] to <gas_product_template>
	gas_line_item.template


 processing: gas_line_item.main_order.main_order

Info: Add virtual field [gas_line_items(es)] to <main_order>
	gas_line_item.main_order


 processing: gas_shipping_group


 processing: gas_shipping_group.gas_line_item.gas_line_item

Info: Add virtual field [gas_shipping_groups(es)] to <gas_line_item>
	gas_shipping_group.gas_line_item


 processing: gas_shipping_group.main_order.main_order

Info: Add virtual field [gas_shipping_groups(es)] to <main_order>
	gas_shipping_group.main_order


 processing: gas_shipping_group.deliver_type.shipping_type

Info: Add virtual field [gas_shipping_groups(es)] to <deliver_type>
	gas_shipping_group.shipping_type


 processing: gas_shipping_group.shipping_status.shipping_status

Info: Add virtual field [gas_shipping_groups(es)] to <shipping_status>
	gas_shipping_group.shipping_status


 processing: gas_shipping_group.deliver_task.deliver_task

Info: Add virtual field [gas_shipping_groups(es)] to <deliver_task>
	gas_shipping_group.deliver_task


 processing: gas_shipping_group.merchant.seller

Info: Add virtual field [gas_shipping_groups(es)] to <merchant>
	gas_shipping_group.seller


 processing: gas_shipping_group.merchant.buyer

Info: Add virtual field [gas_shipping_groups(es)] to <merchant>
	gas_shipping_group.buyer


 processing: gas_shipping_group.employee.creator

Info: Add virtual field [gas_shipping_groups(es)] to <employee>
	gas_shipping_group.creator


 processing: delivery_receipt


 processing: delivery_receipt.gas_shipping_group.gas_shipping_group

Info: Add virtual field [delivery_receipts(es)] to <gas_shipping_group>
	delivery_receipt.gas_shipping_group


 processing: delivery_receipt.gas_line_item.gas_line_item

Info: Add virtual field [delivery_receipts(es)] to <gas_line_item>
	delivery_receipt.gas_line_item


 processing: delivery_receipt.main_order.main_order

Info: Add virtual field [delivery_receipts(es)] to <main_order>
	delivery_receipt.main_order


 processing: delivery_receipt.merchant.seller

Info: Add virtual field [delivery_receipts(es)] to <merchant>
	delivery_receipt.seller


 processing: delivery_receipt.merchant.buyer

Info: Add virtual field [delivery_receipts(es)] to <merchant>
	delivery_receipt.buyer


 processing: delivery_receipt.employee.creator

Info: Add virtual field [delivery_receipts(es)] to <employee>
	delivery_receipt.creator


 processing: delivery_receipt.employee.confirmer

Info: Add virtual field [delivery_receipts(es)] to <employee>
	delivery_receipt.confirmer


 processing: delivery_receipt.delivery_receipt_status.status

Info: Add virtual field [delivery_receipts(es)] to <delivery_receipt_status>
	delivery_receipt.status


 processing: order_action_type


 processing: order_action_type.platform.platform

Info: Add virtual field [order_action_types(es)] to <platform>
	order_action_type.platform


 processing: order_operation_record


 processing: order_operation_record.main_order.main_order

Info: Add virtual field [order_operation_records(es)] to <main_order>
	order_operation_record.main_order


 processing: order_operation_record.employee.actor

Info: Add virtual field [order_operation_records(es)] to <employee>
	order_operation_record.actor


 processing: order_operation_record.order_action_type.action

Info: Add virtual field [order_operation_records(es)] to <order_action_type>
	order_operation_record.action


 processing: icon_configuration


 processing: icon_configuration.platform.platform

Info: Add virtual field [icon_configurations(es)] to <platform>
	icon_configuration.platform


 processing: system_level_configuration


 processing: system_level_configuration.platform.platform

Info: Add virtual field [system_level_configurations(es)] to <platform>
	system_level_configuration.platform


 processing: system_level_images


 processing: system_level_images.platform.platform

Info: Add virtual field [system_level_imagess(es)] to <platform>
	system_level_images.platform


 processing: system_level_content


 processing: system_level_content.platform.platform

Info: Add virtual field [system_level_contents(es)] to <platform>
	system_level_content.platform


 processing: system_level_number


 processing: system_level_number.platform.platform

Info: Add virtual field [system_level_numbers(es)] to <platform>
	system_level_number.platform


 processing: system_announcement


 processing: system_announcement.mobile_app.mobile_app

Info: Add virtual field [system_announcements(es)] to <mobile_app>
	system_announcement.mobile_app


 processing: guide_type


 processing: guide_type.mobile_app.app

Info: Add virtual field [guide_types(es)] to <mobile_app>
	guide_type.app


 processing: guide_slide


 processing: guide_slide.guide_type.guide_type

Info: Add virtual field [guide_slides(es)] to <guide_type>
	guide_slide.guide_type


 processing: guide_slide.mobile_app.app

Info: Add virtual field [guide_slides(es)] to <mobile_app>
	guide_slide.app


 processing: change_request_type


 processing: change_request_type.platform.platform

Info: Add virtual field [change_request_types(es)] to <platform>
	change_request_type.platform


 processing: change_request


 processing: change_request.change_request_type.request_type

Info: Add virtual field [change_requests(es)] to <change_request_type>
	change_request.request_type


 processing: change_request.platform.platform

Info: Add virtual field [change_requests(es)] to <platform>
	change_request.platform


 processing: event_tbd


 processing: event_tbd.change_request.change_request

Info: Add virtual field [event_tbds(es)] to <change_request>
	event_tbd.change_request


 processing: event_seller_info


 processing: event_seller_info.change_request.change_request

Info: Add virtual field [event_seller_infos(es)] to <change_request>
	event_seller_info.change_request


 processing: event_admin_transfer


 processing: event_admin_transfer.personal_user.new_admin

Info: Add virtual field [event_admin_transfers(es)] to <personal_user>
	event_admin_transfer.new_admin


 processing: event_admin_transfer.change_request.change_request

Info: Add virtual field [event_admin_transfers(es)] to <change_request>
	event_admin_transfer.change_request


 processing: event_update_merchant_off_time


 processing: event_update_merchant_off_time.off_time.off_time

Info: Add virtual field [event_update_merchant_off_times(es)] to <off_time>
	event_update_merchant_off_time.off_time


 processing: event_update_merchant_off_time.change_request.change_request

Info: Add virtual field [event_update_merchant_off_times(es)] to <change_request>
	event_update_merchant_off_time.change_request


 processing: event_update_merchant_delivery_limit


 processing: event_update_merchant_delivery_limit.change_request.change_request

Info: Add virtual field [event_update_merchant_delivery_limits(es)] to <change_request>
	event_update_merchant_delivery_limit.change_request


 processing: event_employee_approve


 processing: event_employee_approve.change_request.change_request

Info: Add virtual field [event_employee_approves(es)] to <change_request>
	event_employee_approve.change_request


 processing: event_update_additional_spec


 processing: event_update_additional_spec.change_request.change_request

Info: Add virtual field [event_update_additional_specs(es)] to <change_request>
	event_update_additional_spec.change_request


 processing: event_info_in_cr


 processing: event_info_in_cr.change_request.change_request

Info: Add virtual field [event_info_in_crs(es)] to <change_request>
	event_info_in_cr.change_request


 processing: event_info_in_cr.change_request_type.change_request_type

Info: Add virtual field [event_info_in_crs(es)] to <change_request_type>
	event_info_in_cr.change_request_type


 processing: system_processing_instance


 processing: system_processing_instance.platform.platform

Info: Add virtual field [system_processing_instances(es)] to <platform>
	system_processing_instance.platform


 processing: page.page_type.page_type

Info: Add virtual field [pages(es)] to <page_type>
	page.page_type


 processing: page.mobile_app.mobile_app

Info: Add virtual field [pages(es)] to <mobile_app>
	page.mobile_app


 processing: page_type.mobile_app.mobile_app

Info: Add virtual field [page_types(es)] to <mobile_app>
	page_type.mobile_app


 processing: slide.page.page

Info: Add virtual field [slides(es)] to <page>
	slide.page


 processing: ui_action.page.page

Info: Add virtual field [ui_actions(es)] to <page>
	ui_action.page


 processing: section.page.page

Info: Add virtual field [sections(es)] to <page>
	section.page


 processing: user_allow_list.user_domain.domain

Info: Add virtual field [user_allow_lists(es)] to <user_domain>
	user_allow_list.domain


 processing: sec_user.user_domain.domain

Info: Add virtual field [sec_users(es)] to <user_domain>
	sec_user.domain


 processing: user_app.sec_user.sec_user

Info: Add virtual field [user_apps(es)] to <sec_user>
	user_app.sec_user


 processing: quick_link.user_app.app

Info: Add virtual field [quick_links(es)] to <user_app>
	quick_link.app


 processing: list_access.user_app.app

Info: Add virtual field [list_accesss(es)] to <user_app>
	list_access.app


 processing: login_history.sec_user.sec_user

Info: Add virtual field [login_historys(es)] to <sec_user>
	login_history.sec_user


 processing: candidate_element.candidate_container.container

Info: Add virtual field [candidate_elements(es)] to <candidate_container>
	candidate_element.container


 processing: wechat_workapp_identity.sec_user.sec_user

Info: Add virtual field [wechat_workapp_identitys(es)] to <sec_user>
	wechat_workapp_identity.sec_user


 processing: wechat_miniapp_identity.sec_user.sec_user

Info: Add virtual field [wechat_miniapp_identitys(es)] to <sec_user>
	wechat_miniapp_identity.sec_user


 processing: keypair_identity.public_key_type.key_type

Info: Add virtual field [keypair_identitys(es)] to <public_key_type>
	keypair_identity.key_type


 processing: keypair_identity.sec_user.sec_user

Info: Add virtual field [keypair_identitys(es)] to <sec_user>
	keypair_identity.sec_user


 processing: public_key_type.user_domain.domain

Info: Add virtual field [public_key_types(es)] to <user_domain>
	public_key_type.domain


**************************************************

platform{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('新途气体交易平台'), verb: false, required: true,type:string,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(38){
		provinceList	platform(__no_group)--platform;
		cityList	platform(__no_group)--platform;
		districtList	platform(__no_group)--platform;
		roleList	platform(__no_group)--platform;
		employeeStatusList	platform(__no_group)--platform;
		invitationTypeList	platform(__no_group)--platform;
		offTimeList	platform(__no_group)--platform;
		merchantList	platform(__no_group)--platform;
		personalUserList	platform(__no_group)--platform;
		organizationIdentityList	platform(__no_group)--platform;
		employeeList	platform(__no_group)--platform;
		gasContainerList	platform(__no_group)--platform;
		fillMediumList	platform(__no_group)--platform;
		nominalVolumeList	platform(__no_group)--platform;
		fillVolumeList	platform(__no_group)--platform;
		nominalPressureList	platform(__no_group)--platform;
		gasContainerCategoryList	platform(__no_group)--platform;
		gasComponentList	platform(__no_group)--platform;
		checkStatusList	platform(__no_group)--platform;
		actionTypeList	platform(__no_group)--platform;
		productStatusList	platform(__no_group)--platform;
		orderStatusList	platform(__no_group)--platform;
		deliverTypeList	platform(__no_group)--platform;
		shippingStatusList	platform(__no_group)--platform;
		deliverTaskStatusList	platform(__no_group)--platform;
		deliveryReceiptStatusList	platform(__no_group)--platform;
		gasCylinderList	platform(__no_group)--platform;
		gasProductTemplateList	platform(__no_group)--platform;
		gasProductList	platform(__no_group)--platform;
		orderActionTypeList	platform(__no_group)--platform;
		iconConfigurationList	platform(__no_group)--platform;
		systemLevelConfigurationList	platform(__no_group)--platform;
		systemLevelImagesList	platform(__no_group)--platform;
		systemLevelContentList	platform(__no_group)--platform;
		systemLevelNumberList	platform(__no_group)--platform;
		changeRequestTypeList	platform(__no_group)--platform;
		changeRequestList	platform(__no_group)--platform;
		systemProcessingInstanceList	platform(__no_group)--platform;
	}
	meta {name=platform, features=laboratory_function,root} 

} depth=0; isRoot = true

province{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('四川|北京'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: provinceList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		cityList	province(__no_group)--province;
	}
	meta {name=province, features=setting} 

} depth=1; isRoot = false

city{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('成都|北京'), verb: false, required: true,type:string,relationMeta={};
		province	province('$(object)'), verb: false, required: true, referenceBy: cityList,type:province,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: cityList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		districtList	city(__no_group)--city;
	}
	meta {name=city, features=setting} 

} depth=2; isRoot = false

district{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('成华区|朝阳区|锦江区|海淀区'), verb: false, required: true,type:string,relationMeta={};
		city	city('$(object)'), verb: false, required: true, referenceBy: districtList,type:city,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: districtList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=district, features=setting} 

} depth=3; isRoot = false

role{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('管理员|员工'), verb: false, required: true,type:string,relationMeta={};
		string	code('ADMIN|EMPLOYEE'), verb: false, required: true,type:string,relationMeta={};
		string	description('管理人员|员工'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: roleList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		employeeList	role(__no_group)--role;
	}
	meta {name=role, features=status} 

} depth=1; isRoot = false

employee_status{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('正常|已删除|待审核'), verb: false, required: true,type:string,relationMeta={};
		string	code('NORMAL|REMOVED|TO_BE_APPROVE'), verb: false, required: true,type:string,relationMeta={};
		string	description('正常|已删除|待审核'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: employeeStatusList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		employeeList	status(__no_group)--status;
	}
	meta {name=employee_status, features=status} 

} depth=1; isRoot = false

invitation_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('邀请同事|邀请商家|邀请用户|分享'), verb: false, required: true,type:string,relationMeta={};
		string	code('COLLEAGUE|SUPPLIER|CUSTOMER|COMMON'), verb: false, required: true,type:string,relationMeta={};
		string	description('邀请同事|邀请商家|邀请用户|分享'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: invitationTypeList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		invitationRecordList	type(__no_group)--type;
	}
	meta {name=invitation_type, features=status} 

} depth=1; isRoot = false

off_time{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('14:00|15:00|16:00|17:00|18:00|19:00|20:00|21:00'), verb: false, required: true,type:string,relationMeta={};
		string	code('H14_00|H15_00|H16_00|H17_00|H18_00|H19_00|H20_00|H21_00'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: offTimeList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(2){
		merchantList	off_time(__no_group)--off_time;
		eventUpdateMerchantOffTimeList	off_time(__no_group)--off_time;
	}
	meta {name=off_time, features=status} 

} depth=1; isRoot = false

merchant{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('肯德基成都采购中心|张晓丹|妃妤婔婒'), verb: false, required: true,type:string,relationMeta={};
		off_time	off_time('$(object)'), verb: false, required: true, referenceBy: merchantList,type:off_time,relationMeta={};
		int	delivery_limit('10000'), verb: false, required: true,type:int,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: merchantList,type:platform,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(20){
		organizationIdentityList	merchant(__no_group)--merchant;
		warehouseList	merchant(__no_group)--merchant;
		employeeList	merchant(__no_group)--merchant;
		supplyRelationshipListAsSupplier	supplier(__no_group)--supplier;
		supplyRelationshipListAsCustomer	customer(__no_group)--supplier;
		merchantCylinderList	merchant(__no_group)--merchant;
		merchantCylinderRecordList	merchant(__no_group)--merchant;
		customerCylinderListAsSeller	seller(__no_group)--seller;
		customerCylinderListAsCustomer	customer(__no_group)--seller;
		customerCylinderRecordListAsSeller	seller(__no_group)--seller;
		customerCylinderRecordListAsCustomer	customer(__no_group)--seller;
		gasProductList	merchant(__no_group)--merchant;
		gasProductInventoryRecordList	merchant(__no_group)--merchant;
		deliverTaskList	merchant(__no_group)--merchant;
		mainOrderListAsBuyer	buyer(__no_group)--buyer;
		mainOrderListAsSeller	seller(__no_group)--buyer;
		gasShippingGroupListAsSeller	seller(__no_group)--seller;
		gasShippingGroupListAsBuyer	buyer(__no_group)--seller;
		deliveryReceiptListAsSeller	seller(__no_group)--seller;
		deliveryReceiptListAsBuyer	buyer(__no_group)--seller;
	}
	meta {name=merchant, features=log} 

} depth=2; isRoot = false

personal_user{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('张喜来|黄波|王煜东|袁明星|周廷志|刘洋'), verb: false, required: false,type:string,relationMeta={};
		string	nick_name('张喜来|黄波|王煜东|袁明星|周廷志|刘洋'), verb: false, required: false,type:string,relationMeta={};
		string_china_mobile_phone	mobile('13308188512'), verb: false, required: false,type:string_china_mobile_phone,relationMeta={};
		string_image	avatar('avatar.jpg'), verb: false, required: true,type:string_image,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: personalUserList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(6){
		individualIdentityList	personal_user(__no_group)--personal_user;
		userWorkingInfoList	user(__no_group)--user;
		employeeList	person_information(__no_group)--person_information;
		deliverTaskList	deliver_staff(__no_group)--deliver_staff;
		mainOrderList	creator(__no_group)--creator;
		eventAdminTransferList	new_admin(__no_group)--new_admin;
	}
	meta {name=personal_user, features=merchant} 

} depth=1; isRoot = false

individual_identity{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('张喜来|黄波|王煜东|袁明星|周廷志|刘洋'), verb: false, required: false,type:string,relationMeta={};
		personal_user	personal_user('$(object)'), verb: false, required: true, referenceBy: individualIdentityList,type:personal_user,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=individual_identity, features=log} 

} depth=2; isRoot = false

user_working_info{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		personal_user	user('$(object)'), verb: false, required: true, referenceBy: userWorkingInfoList,type:personal_user,relationMeta={};
		employee	employee('$(object)'), verb: false, required: true, referenceBy: userWorkingInfoList,type:employee,relationMeta={};
		string	job_role('买家|卖家'), verb: false, required: true,type:string,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=user_working_info, features=root} 

} depth=4; isRoot = false

organization_identity{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('双链科技'), verb: false, required: true,type:string,relationMeta={};
		string_taxpayerid	agency_social_code('91510100MA6C66P74M'), verb: false, required: false,type:string_taxpayerid,relationMeta={};
		string	contact_name('张三'), verb: false, required: true,type:string,relationMeta={};
		string_china_mobile_phone	mobile('13888888888'), verb: false, required: true,type:string_china_mobile_phone,relationMeta={};
		string	address('天府三街'), verb: false, required: true,type:string,relationMeta={};
		string_image	logo('1.jpg'), verb: false, required: false,type:string_image,relationMeta={};
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: organizationIdentityList,type:merchant,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: organizationIdentityList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=organization_identity, features=root} 

} depth=3; isRoot = false

warehouse{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('天府三街'), verb: false, required: true,type:string,relationMeta={};
		string	contact_name('张三'), verb: false, required: true,type:string,relationMeta={};
		string_china_mobile_phone	mobile('13888888888'), verb: false, required: true,type:string_china_mobile_phone,relationMeta={};
		string	address('天府三街'), verb: false, required: true,type:string,relationMeta={};
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: warehouseList,type:merchant,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=warehouse, features=root} 

} depth=3; isRoot = false

invitation_record{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		employee	inviter('$(object)'), verb: false, required: true, referenceBy: invitationRecordListAsInviter,type:employee,relationMeta={};
		employee	invitee('$(object)'), verb: false, required: true, referenceBy: invitationRecordListAsInvitee,type:employee,relationMeta={};
		invitation_type	type('$(object)'), verb: false, required: true, referenceBy: invitationRecordList,type:invitation_type,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=invitation_record, features=log} 

} depth=4; isRoot = false

employee{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		personal_user	person_information('$(object)'), verb: false, required: true, referenceBy: employeeList,type:personal_user,relationMeta={};
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: employeeList,type:merchant,relationMeta={};
		role	role('$(object)'), verb: false, required: true, referenceBy: employeeList,type:role,relationMeta={};
		employee_status	status('$(object)'), verb: false, required: true, referenceBy: employeeList,type:employee_status,relationMeta={};
		string	comment('司机'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: employeeList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(11){
		userWorkingInfoList	employee(__no_group)--employee;
		invitationRecordListAsInviter	inviter(__no_group)--inviter;
		invitationRecordListAsInvitee	invitee(__no_group)--inviter;
		merchantCylinderRecordList	actor(__no_group)--actor;
		customerCylinderRecordList	actor(__no_group)--actor;
		customerCylinderRecordEvidenceList	actor(__no_group)--actor;
		gasProductInventoryRecordList	actor(__no_group)--actor;
		gasShippingGroupList	creator(__no_group)--creator;
		deliveryReceiptListAsCreator	creator(__no_group)--creator;
		deliveryReceiptListAsConfirmer	confirmer(__no_group)--creator;
		orderOperationRecordList	actor(__no_group)--actor;
	}
	meta {name=employee, features=root} 

} depth=3; isRoot = false

supply_relationship{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		merchant	supplier('$(object)'), verb: false, required: true, referenceBy: supplyRelationshipListAsSupplier,type:merchant,relationMeta={};
		merchant	customer('$(object)'), verb: false, required: true, referenceBy: supplyRelationshipListAsCustomer,type:merchant,relationMeta={};
		string	supplier_comment('客户1'), verb: false, required: true,type:string,relationMeta={};
		string	customer_comment('供应商1'), verb: false, required: true,type:string,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=supply_relationship, features=root} 

} depth=3; isRoot = false

gas_container{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('3*3散瓶格'), verb: false, required: true,type:string,relationMeta={};
		string	unit('集格'), verb: false, required: true,type:string,relationMeta={};
		int	quantity('9'), verb: false, required: true,type:int,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: gasContainerList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		gasCylinderList	gas_container(__no_group)--gas_container;
	}
	meta {name=gas_container, features=root} 

} depth=1; isRoot = false

fill_medium{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('氧'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: fillMediumList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		gasCylinderList	fill_medium(__no_group)--fill_medium;
	}
	meta {name=fill_medium, features=root} 

} depth=1; isRoot = false

nominal_volume{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	volume('50升'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: nominalVolumeList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		gasCylinderList	nominal_volume(__no_group)--nominal_volume;
	}
	meta {name=nominal_volume, features=root} 

} depth=1; isRoot = false

fill_volume{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	volume('50升'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: fillVolumeList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(2){
		gasProductTemplateList	fill_volume(__no_group)--fill_volume;
		gasProductList	fill_volume(__no_group)--fill_volume;
	}
	meta {name=fill_volume, features=root} 

} depth=1; isRoot = false

nominal_pressure{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	pressure('20Mpa'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: nominalPressureList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		gasCylinderList	nominal_pressure(__no_group)--nominal_pressure;
	}
	meta {name=nominal_pressure, features=root} 

} depth=1; isRoot = false

gas_container_category{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('绝热气瓶'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: gasContainerCategoryList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		gasCylinderList	gas_container_category(__no_group)--gas_container_category;
	}
	meta {name=gas_container_category, features=root} 

} depth=1; isRoot = false

gas_component{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('氧'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: gasComponentList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(2){
		gasProductTemplateComponentList	component(__no_group)--component;
		gasProductComponentList	component(__no_group)--component;
	}
	meta {name=gas_component, features=root} 

} depth=1; isRoot = false

check_status{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('待买家确认|买家已确认'), verb: false, required: true,type:string,relationMeta={};
		string	code('WAITING_BUYER_CONFIRM|BUYER_CONFIRMED'), verb: false, required: true,type:string,relationMeta={};
		string	description('待买家确认|买家已确认'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: checkStatusList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		customerCylinderList	status(__no_group)--status;
	}
	meta {name=check_status, features=status} 

} depth=1; isRoot = false

action_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('空瓶盘库|空瓶入库|生产入库|订单返瓶|确认接收单|商家提交气瓶盘库|客户确认气瓶盘库|外采入库|接收单入库'), verb: false, required: true,type:string,relationMeta={};
		string	code('CYLINDER_SET|CYLINDER_IN|PRODUCE|ORDER_BACK_CYLINDER|BUYER_CONFIRMED|SELLER_SUBMIT_CYLINDER_SET|CUSTOMER_CONFIRM_CYLINDER_SET|PURCHASE_OUT_OF_SYSTEM|PURCHASE_IN_SYSTEM'), verb: false, required: true,type:string,relationMeta={};
		string	description('空瓶盘库|空瓶入库|生产入库|订单返瓶|确认接收单|商家提交气瓶盘库|客户确认气瓶盘库|外采入库|接收单入库'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: actionTypeList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(3){
		merchantCylinderRecordList	action(__no_group)--action;
		customerCylinderRecordList	action(__no_group)--action;
		gasProductInventoryRecordList	action(__no_group)--action;
	}
	meta {name=action_type, features=status} 

} depth=1; isRoot = false

product_status{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('正常|已下架'), verb: false, required: true,type:string,relationMeta={};
		string	code('NORMAL|REMOVED'), verb: false, required: true,type:string,relationMeta={};
		string	description('正常|已下架'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: productStatusList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		gasProductList	status(__no_group)--status;
	}
	meta {name=product_status, features=status} 

} depth=1; isRoot = false

order_status{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('处理中|待买家确认|买家确认超时|待审核|已提交|待自提|待配送|正在配送|已交接|已完成|已取消'), verb: false, required: true,type:string,relationMeta={};
		string	code('PROCESSING|WAITING_BUYER_CONFIRM|BUYER_CONFIRM_TIMEOUT|WAITING_SELLER_CONFIRM|SUBMITTED|WAITING_BUYER_PICK_UP|WAITING_SELLER_DELIVERY|SELLER_SHIPPING|BUYER_RECEIVED|COMPLETED|CANCELLED'), verb: false, required: true,type:string,relationMeta={};
		string	description('处理中|待买家确认|买家确认超时|待卖家审核|已提交|待自提|待配送|正在配送|已交接|已完成|已取消'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: orderStatusList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		mainOrderList	status(__no_group)--status;
	}
	meta {name=order_status, features=status} 

} depth=1; isRoot = false

deliver_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('配送|自提'), verb: false, required: true,type:string,relationMeta={};
		string	code('DELIVERY|PICKUP'), verb: false, required: true,type:string,relationMeta={};
		string	description('送货上门|自提'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: deliverTypeList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		gasShippingGroupList	shipping_type(__no_group)--shipping_type;
	}
	meta {name=deliver_type, features=status} 

} depth=1; isRoot = false

shipping_status{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('待自提|待发货|正在配送|已签收|已完成|已取消'), verb: false, required: true,type:string,relationMeta={};
		string	code('WAITING_BUYER_PICK_UP|WAITING_SELLER_DELIVERY|SELLER_SHIPPING|BUYER_RECEIVED|COMPLETED|CANCELLED'), verb: false, required: true,type:string,relationMeta={};
		string	description('待自提|待发货|正在配送|已签收|已完成|已取消'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: shippingStatusList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		gasShippingGroupList	shipping_status(__no_group)--shipping_status;
	}
	meta {name=shipping_status, features=status} 

} depth=1; isRoot = false

deliver_task_status{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('待执行|配送中|已完成'), verb: false, required: true,type:string,relationMeta={};
		string	code('PENDING|SHIPPING|COMPLETED'), verb: false, required: true,type:string,relationMeta={};
		string	description('待执行|配送中|已完成'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: deliverTaskStatusList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		deliverTaskList	status(__no_group)--status;
	}
	meta {name=deliver_task_status, features=status} 

} depth=1; isRoot = false

delivery_receipt_status{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('待客户确认|超时未确认|代客户确认|客户已确认'), verb: false, required: true,type:string,relationMeta={};
		string	code('WAITING_BUYER_CONFIRM|BUYER_CONFIRM_TIMEOUT|SELLER_FORCE_CONFIRMED|BUYER_CONFIRMED'), verb: false, required: true,type:string,relationMeta={};
		string	description('待客户确认|超时未确认|代客户确认|客户已确认'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: deliveryReceiptStatusList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		deliveryReceiptList	status(__no_group)--status;
	}
	meta {name=delivery_receipt_status, features=status} 

} depth=1; isRoot = false

gas_cylinder{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('氦50L-20Mpa-散瓶G5/8内螺纹左旋'), verb: false, required: true,type:string,relationMeta={};
		gas_container	gas_container('$(object)'), verb: false, required: true, referenceBy: gasCylinderList,type:gas_container,relationMeta={};
		fill_medium	fill_medium('$(object)'), verb: false, required: true, referenceBy: gasCylinderList,type:fill_medium,relationMeta={};
		nominal_pressure	nominal_pressure('$(object)'), verb: false, required: true, referenceBy: gasCylinderList,type:nominal_pressure,relationMeta={};
		nominal_volume	nominal_volume('$(object)'), verb: false, required: true, referenceBy: gasCylinderList,type:nominal_volume,relationMeta={};
		gas_container_category	gas_container_category('$(object)'), verb: false, required: true, referenceBy: gasCylinderList,type:gas_container_category,relationMeta={};
		string	additional_information('xxx'), verb: false, required: false,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: gasCylinderList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(7){
		merchantCylinderList	cylinder(__no_group)--cylinder;
		merchantCylinderRecordList	cylinder(__no_group)--cylinder;
		customerCylinderList	cylinder(__no_group)--cylinder;
		customerCylinderRecordList	cylinder(__no_group)--cylinder;
		gasProductTemplateList	cylinder(__no_group)--cylinder;
		gasProductList	cylinder(__no_group)--cylinder;
		gasLineItemList	cylinder(__no_group)--cylinder;
	}
	meta {name=gas_cylinder, features=root} 

} depth=2; isRoot = false

merchant_cylinder{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		gas_cylinder	cylinder('$(object)'), verb: false, required: true, referenceBy: merchantCylinderList,type:gas_cylinder,relationMeta={};
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: merchantCylinderList,type:merchant,relationMeta={};
		int	quantity('1'), verb: false, required: true,type:int,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=merchant_cylinder, features=root} 

} depth=3; isRoot = false

merchant_cylinder_record{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: merchantCylinderRecordList,type:merchant,relationMeta={};
		gas_cylinder	cylinder('$(object)'), verb: false, required: true, referenceBy: merchantCylinderRecordList,type:gas_cylinder,relationMeta={};
		int	quantity('1'), verb: false, required: true,type:int,relationMeta={};
		int	update_quantity('1'), verb: false, required: true,type:int,relationMeta={};
		employee	actor('$(object)'), verb: false, required: true, referenceBy: merchantCylinderRecordList,type:employee,relationMeta={};
		action_type	action('$(object)'), verb: false, required: true, referenceBy: merchantCylinderRecordList,type:action_type,relationMeta={};
		string_longtext	comment('text()'), verb: false, required: true,type:text,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=merchant_cylinder_record, features=log} 

} depth=4; isRoot = false

customer_cylinder{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		gas_cylinder	cylinder('$(object)'), verb: false, required: true, referenceBy: customerCylinderList,type:gas_cylinder,relationMeta={};
		merchant	seller('$(object)'), verb: false, required: true, referenceBy: customerCylinderListAsSeller,type:merchant,relationMeta={};
		merchant	customer('$(object)'), verb: false, required: true, referenceBy: customerCylinderListAsCustomer,type:merchant,relationMeta={};
		int	quantity('1'), verb: false, required: true,type:int,relationMeta={};
		string	delta('-1'), verb: false, required: true,type:string,relationMeta={};
		check_status	status('$(object)'), verb: false, required: true, referenceBy: customerCylinderList,type:check_status,relationMeta={};
		date_time	last_check_time('date_time()'), verb: false, required: true,type:date_time,relationMeta={};
		date_time	last_confirm_time('date_time()'), verb: false, required: true,type:date_time,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=customer_cylinder, features=root} 

} depth=3; isRoot = false

customer_cylinder_record{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		gas_cylinder	cylinder('$(object)'), verb: false, required: true, referenceBy: customerCylinderRecordList,type:gas_cylinder,relationMeta={};
		merchant	seller('$(object)'), verb: false, required: true, referenceBy: customerCylinderRecordListAsSeller,type:merchant,relationMeta={};
		merchant	customer('$(object)'), verb: false, required: true, referenceBy: customerCylinderRecordListAsCustomer,type:merchant,relationMeta={};
		int	quantity('1'), verb: false, required: true,type:int,relationMeta={};
		int	update_quantity('1'), verb: false, required: true,type:int,relationMeta={};
		employee	actor('$(object)'), verb: false, required: true, referenceBy: customerCylinderRecordList,type:employee,relationMeta={};
		action_type	action('$(object)'), verb: false, required: true, referenceBy: customerCylinderRecordList,type:action_type,relationMeta={};
		string_longtext	comment('text()'), verb: false, required: true,type:text,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		customerCylinderRecordEvidenceList	record(__no_group)--record;
	}
	meta {name=customer_cylinder_record, features=log} 

} depth=4; isRoot = false

customer_cylinder_record_evidence{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		images	images('images()'), verb: false, required: true,type:images,relationMeta={};
		string_longtext	comment('text()'), verb: false, required: true,type:text,relationMeta={};
		customer_cylinder_record	record('$(object)'), verb: false, required: true, referenceBy: customerCylinderRecordEvidenceList,type:customer_cylinder_record,relationMeta={};
		employee	actor('$(object)'), verb: false, required: true, referenceBy: customerCylinderRecordEvidenceList,type:employee,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=customer_cylinder_record_evidence, features=log} 

} depth=5; isRoot = false

gas_product_template{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('食品添加剂氮气-20Mpa-50L-3*5集装格'), verb: false, required: true,type:string,relationMeta={};
		gas_cylinder	cylinder('$(object)'), verb: false, required: true, referenceBy: gasProductTemplateList,type:gas_cylinder,relationMeta={};
		fill_volume	fill_volume('$(object)'), verb: false, required: true, referenceBy: gasProductTemplateList,type:fill_volume,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: gasProductTemplateList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(3){
		gasProductTemplateComponentList	product_template(__no_group)--product_template;
		gasProductList	template(__no_group)--template;
		gasLineItemList	template(__no_group)--template;
	}
	meta {name=gas_product_template, features=root} 

} depth=3; isRoot = false

gas_product_template_component{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		gas_component	component('$(object)'), verb: false, required: true, referenceBy: gasProductTemplateComponentList,type:gas_component,relationMeta={};
		double	percentage('0.1'), verb: false, required: true,type:double,relationMeta={};
		gas_product_template	product_template('$(object)'), verb: false, required: true, referenceBy: gasProductTemplateComponentList,type:gas_product_template,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=gas_product_template_component, features=root} 

} depth=4; isRoot = false

gas_product{
	fields(15){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('食品添加剂氮气-20Mpa-50L-3*5集装格'), verb: false, required: true,type:string,relationMeta={};
		gas_cylinder	cylinder('$(object)'), verb: false, required: true, referenceBy: gasProductList,type:gas_cylinder,relationMeta={};
		fill_volume	fill_volume('$(object)'), verb: false, required: true, referenceBy: gasProductList,type:fill_volume,relationMeta={};
		gas_product_template	template('$(object)'), verb: false, required: false, referenceBy: gasProductList,type:gas_product_template,relationMeta={};
		product_status	status('$(object)'), verb: false, required: true, referenceBy: gasProductList,type:product_status,relationMeta={};
		int	quantity('1'), verb: false, required: true,type:int,relationMeta={};
		int	target_quantity('1'), verb: false, required: true,type:int,relationMeta={};
		int	threhold_quantity('1'), verb: false, required: true,type:int,relationMeta={};
		int	quantity_per_day('1'), verb: false, required: true,type:int,relationMeta={};
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: gasProductList,type:merchant,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: gasProductList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(3){
		gasProductComponentList	product(__no_group)--product;
		gasProductInventoryRecordList	product(__no_group)--product;
		gasLineItemList	product(__no_group)--product;
	}
	meta {name=gas_product, features=root} 

} depth=4; isRoot = false

gas_product_component{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		gas_component	component('$(object)'), verb: false, required: true, referenceBy: gasProductComponentList,type:gas_component,relationMeta={};
		double	percentage('0.1'), verb: false, required: true,type:double,relationMeta={};
		gas_product	product('$(object)'), verb: false, required: true, referenceBy: gasProductComponentList,type:gas_product,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=gas_product_component, features=root} 

} depth=5; isRoot = false

gas_product_inventory_record{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: gasProductInventoryRecordList,type:merchant,relationMeta={};
		gas_product	product('$(object)'), verb: false, required: true, referenceBy: gasProductInventoryRecordList,type:gas_product,relationMeta={};
		int	quantity('1'), verb: false, required: true,type:int,relationMeta={};
		int	update_quantity('1'), verb: false, required: true,type:int,relationMeta={};
		employee	actor('$(object)'), verb: false, required: true, referenceBy: gasProductInventoryRecordList,type:employee,relationMeta={};
		action_type	action('$(object)'), verb: false, required: true, referenceBy: gasProductInventoryRecordList,type:action_type,relationMeta={};
		string_longtext	comment('text()'), verb: false, required: true,type:text,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=gas_product_inventory_record, features=log} 

} depth=5; isRoot = false

gas_product_cache{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	product_id('GP000001'), verb: false, required: true,type:string,relationMeta={};
		string	merchant_id('M000001'), verb: false, required: true,type:string,relationMeta={};
		string_longtext	search_text('text()'), verb: false, required: true,type:text,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=gas_product_cache, features=root} 

} depth=0; isRoot = true

gas_product_template_cache{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	template_id('GPT000001'), verb: false, required: true,type:string,relationMeta={};
		string_longtext	search_text('text()'), verb: false, required: true,type:text,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=gas_product_template_cache, features=root} 

} depth=0; isRoot = true

deliver_task{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('2012年12月12日张三任务'), verb: false, required: true,type:string,relationMeta={};
		personal_user	deliver_staff('$(object)'), verb: false, required: true, referenceBy: deliverTaskList,type:personal_user,relationMeta={};
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: deliverTaskList,type:merchant,relationMeta={};
		deliver_task_status	status('$(object)'), verb: false, required: true, referenceBy: deliverTaskList,type:deliver_task_status,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		gasShippingGroupList	deliver_task(__no_group)--deliver_task;
	}
	meta {name=deliver_task, features=root} 

} depth=3; isRoot = false

main_order{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string_longtext	comment('text()'), verb: false, required: true,type:text,relationMeta={};
		merchant	buyer('$(object)'), verb: false, required: true, referenceBy: mainOrderListAsBuyer,type:merchant,relationMeta={};
		merchant	seller('$(object)'), verb: false, required: true, referenceBy: mainOrderListAsSeller,type:merchant,relationMeta={};
		order_status	status('$(object)'), verb: false, required: true, referenceBy: mainOrderList,type:order_status,relationMeta={};
		personal_user	creator('$(object)'), verb: false, required: true, referenceBy: mainOrderList,type:personal_user,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(4){
		gasLineItemList	main_order(__no_group)--main_order;
		gasShippingGroupList	main_order(__no_group)--main_order;
		deliveryReceiptList	main_order(__no_group)--main_order;
		orderOperationRecordList	main_order(__no_group)--main_order;
	}
	meta {name=main_order, features=root} 

} depth=3; isRoot = false

gas_line_item{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('食品添加剂氮气-20Mpa-50L-3*5集装格'), verb: false, required: true,type:string,relationMeta={};
		gas_cylinder	cylinder('$(object)'), verb: false, required: true, referenceBy: gasLineItemList,type:gas_cylinder,relationMeta={};
		gas_product	product('$(object)'), verb: false, required: true, referenceBy: gasLineItemList,type:gas_product,relationMeta={};
		gas_product_template	template('$(object)'), verb: false, required: false, referenceBy: gasLineItemList,type:gas_product_template,relationMeta={};
		int	quantity('1'), verb: false, required: true,type:int,relationMeta={};
		int	back_quantity('1'), verb: false, required: true,type:int,relationMeta={};
		string	components('90%氦+7%氩+3%二氧化碳'), verb: false, required: true,type:string,relationMeta={};
		main_order	main_order('$(object)'), verb: false, required: true, referenceBy: gasLineItemList,type:main_order,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(2){
		gasShippingGroupList	gas_line_item(__no_group)--gas_line_item;
		deliveryReceiptList	gas_line_item(__no_group)--gas_line_item;
	}
	meta {name=gas_line_item, features=root} 

} depth=5; isRoot = false

gas_shipping_group{
	fields(20){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		gas_line_item	gas_line_item('$(object)'), verb: false, required: true, referenceBy: gasShippingGroupList,type:gas_line_item,relationMeta={};
		main_order	main_order('$(object)'), verb: false, required: true, referenceBy: gasShippingGroupList,type:main_order,relationMeta={};
		int	quantity('1'), verb: false, required: true,type:int,relationMeta={};
		string	handover_address('天府三街'), verb: false, required: true,type:string,relationMeta={};
		string	seller_contact_name('张三'), verb: false, required: false,type:string,relationMeta={};
		string	seller_contact_phone('1213a'), verb: false, required: false,type:string,relationMeta={};
		string	buyer_contact_name('张三'), verb: false, required: true,type:string,relationMeta={};
		string	buyer_contact_phone('1213a'), verb: false, required: true,type:string,relationMeta={};
		date	handover_date('date_future()'), verb: false, required: true,type:date_future,relationMeta={};
		string	handover_time('上午|下午|3点-5点[0,20]'), verb: false, required: true,type:string,relationMeta={};
		deliver_type	shipping_type('$(object)'), verb: false, required: true, referenceBy: gasShippingGroupList,type:deliver_type,relationMeta={};
		shipping_status	shipping_status('$(object)'), verb: false, required: true, referenceBy: gasShippingGroupList,type:shipping_status,relationMeta={};
		deliver_task	deliver_task('$(object)'), verb: false, required: true, referenceBy: gasShippingGroupList,type:deliver_task,relationMeta={};
		merchant	seller('$(object)'), verb: false, required: true, referenceBy: gasShippingGroupListAsSeller,type:merchant,relationMeta={};
		merchant	buyer('$(object)'), verb: false, required: true, referenceBy: gasShippingGroupListAsBuyer,type:merchant,relationMeta={};
		employee	creator('$(object)'), verb: false, required: true, referenceBy: gasShippingGroupList,type:employee,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		deliveryReceiptList	gas_shipping_group(__no_group)--gas_shipping_group;
	}
	meta {name=gas_shipping_group, features=log} 

} depth=6; isRoot = false

delivery_receipt{
	fields(15){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		gas_shipping_group	gas_shipping_group('$(object)'), verb: false, required: true, referenceBy: deliveryReceiptList,type:gas_shipping_group,relationMeta={};
		gas_line_item	gas_line_item('$(object)'), verb: false, required: true, referenceBy: deliveryReceiptList,type:gas_line_item,relationMeta={};
		main_order	main_order('$(object)'), verb: false, required: true, referenceBy: deliveryReceiptList,type:main_order,relationMeta={};
		int	quantity('1'), verb: false, required: true,type:int,relationMeta={};
		int	back_quantity('1'), verb: false, required: true,type:int,relationMeta={};
		string_longtext	comment('text()'), verb: false, required: true,type:text,relationMeta={};
		merchant	seller('$(object)'), verb: false, required: true, referenceBy: deliveryReceiptListAsSeller,type:merchant,relationMeta={};
		merchant	buyer('$(object)'), verb: false, required: true, referenceBy: deliveryReceiptListAsBuyer,type:merchant,relationMeta={};
		employee	creator('$(object)'), verb: false, required: true, referenceBy: deliveryReceiptListAsCreator,type:employee,relationMeta={};
		employee	confirmer('$(object)'), verb: false, required: true, referenceBy: deliveryReceiptListAsConfirmer,type:employee,relationMeta={};
		delivery_receipt_status	status('$(object)'), verb: false, required: true, referenceBy: deliveryReceiptList,type:delivery_receipt_status,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		date	confirm_time('date()'), verb: false, required: true,type:date,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=delivery_receipt, features=root} 

} depth=7; isRoot = false

order_action_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('商家代客下单|客户下单|客户确认订单|商家代客户确认订单|商家确认订单|商家订单发货|商家创建交接单|客户确认交接单|商家代客户确认交接单|商家确认完成'), verb: false, required: true,type:string,relationMeta={};
		string	code('SELLER_CREATE_ORDER|BUYER_CREATE_ORDER|BUYER_CONFIRM|SELLER_FORCE_CONFIRM|SELLER_CONFIRM|SELLER_DELIVERY|SELLER_CREATE_DELIVERY_RECEIPT|BUYER_CONFIRM_DELIVERY_RECEIPT|SELLER_FORCE_CONFIRM_DELIVERY_RECEIPT|SELLER_CONFIRM_DONE'), verb: false, required: true,type:string,relationMeta={};
		string	description('代客下单|客户下单|客户确认订单|商家代客户确认订单|商家确认订单|商家订单发货|商家创建交接单|客户确认交接单|商家代客户确认交接单|商家确认完成'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: orderActionTypeList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		orderOperationRecordList	action(__no_group)--action;
	}
	meta {name=order_action_type, features=status} 

} depth=1; isRoot = false

order_operation_record{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		main_order	main_order('$(object)'), verb: false, required: true, referenceBy: orderOperationRecordList,type:main_order,relationMeta={};
		employee	actor('$(object)'), verb: false, required: true, referenceBy: orderOperationRecordList,type:employee,relationMeta={};
		order_action_type	action('$(object)'), verb: false, required: true, referenceBy: orderOperationRecordList,type:order_action_type,relationMeta={};
		string	comment('代张三下单|代双链科技下单'), verb: false, required: false,type:string,relationMeta={};
		string_longtext	detail('text()'), verb: false, required: true,type:text,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=order_operation_record, features=log} 

} depth=4; isRoot = false

icon_configuration{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('历史记录'), verb: false, required: true,type:string,relationMeta={};
		string	code('HISTORY_TASK'), verb: false, required: true,type:string,relationMeta={};
		string	description('设备详情页的 历史记录 的图标'), verb: false, required: true,type:string,relationMeta={};
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: iconConfigurationList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=icon_configuration, features=status} 

} depth=1; isRoot = false

system_level_configuration{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('反馈邮箱|联系电话'), verb: false, required: true,type:string,relationMeta={};
		string	code('FEEDBACK_EMAIL|SERVICE_MOBILE'), verb: false, required: true,type:string,relationMeta={};
		string	value('opensw001@gmail.com|800-12345678'), verb: false, required: true,type:string,relationMeta={};
		string	description('反馈意见的联系邮箱|客服电话'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: systemLevelConfigurationList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=system_level_configuration, features=status} 

} depth=1; isRoot = false

system_level_images{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('默认用户头像|默认工厂图片|平台推广图片'), verb: false, required: true,type:string,relationMeta={};
		string	code('PERSONAL_AVATAR|FACTORY_LOGO|PLATFORM_BANNER'), verb: false, required: true,type:string,relationMeta={};
		string_image	value('example.jpg'), verb: false, required: true,type:string_image,relationMeta={};
		string_url	link_to_url('https://www.baidu.com/some.mp4'), verb: false, required: false,type:string_url,relationMeta={};
		string	description('个人用户的默认头像|工厂的默认图像|平台推广图片'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: systemLevelImagesList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=system_level_images, features=status} 

} depth=1; isRoot = false

system_level_content{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('联系我们'), verb: false, required: true,type:string,relationMeta={};
		string	code('CONTACT_US'), verb: false, required: true,type:string,relationMeta={};
		string_longtext	value('richText()'), verb: false, required: true,type:richText,relationMeta={};
		string	description(''联系我们' 的页面内容'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: systemLevelContentList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=system_level_content, features=status} 

} depth=1; isRoot = false

system_level_number{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('例:审核超时(小时)'), verb: false, required: true,type:string,relationMeta={};
		string	code('REVIEW_TIMEOUT'), verb: false, required: true,type:string,relationMeta={};
		double	value('0000000008.0000000'), verb: false, required: true,type:double,relationMeta={};
		double	min_value('0000000000.0000000'), verb: false, required: true,type:double,relationMeta={};
		double	max_value('0000000168.0000000'), verb: false, required: true,type:double,relationMeta={};
		string	description('审核任务的超时时间. 单位是小时. 默认8小时. 0表示不会超时'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: systemLevelNumberList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=system_level_number, immutable_fields=code,min_value,max_value, features=status} 

} depth=1; isRoot = false

system_announcement{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	content('2020年9月30日系统维护|二维码铭牌免费升级活动'), verb: false, required: true,type:string,relationMeta={};
		string_url	link_to_url('https://www.jiezhichuangxiu/ad/12343545'), verb: false, required: false,type:string_url,relationMeta={};
		date_time	start_time('2199-12-31T23:59:59'), verb: false, required: true,type:date_time,relationMeta={};
		date_time	end_time('2199-12-31T23:59:59'), verb: false, required: true,type:date_time,relationMeta={};
		mobile_app	mobile_app('$(object)'), verb: false, required: true, referenceBy: systemAnnouncementList,type:mobile_app,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=system_announcement, features=root} 

} depth=1; isRoot = false

guide_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('新卖家|卖家|新买家|买家'), verb: false, required: true,type:string,relationMeta={};
		string	code('NEW_SELLER|SELLER|NEW_BUYER|BUYER'), verb: false, required: true,type:string,relationMeta={};
		mobile_app	app('$(object)'), verb: false, required: true, referenceBy: guideTypeList,type:mobile_app,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		guideSlideList	guide_type(__no_group)--guide_type;
	}
	meta {name=guide_type, features=status} 

} depth=1; isRoot = false

guide_slide{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		guide_type	guide_type('$(object)'), verb: false, required: true, referenceBy: guideSlideList,type:guide_type,relationMeta={};
		string	title('注册成功|快速下单|模拟发货'), verb: false, required: false,type:string,relationMeta={};
		string_image	image('machine.jpg|bottle.jpg'), verb: false, required: true,type:string_image,relationMeta={};
		string_longtext	description('richText()'), verb: false, required: false,type:richText,relationMeta={};
		string_url	link_url('http://www.think-to.com'), verb: false, required: false,type:string_url,relationMeta={};
		int	display_order('1|2|3|4|5'), verb: false, required: true,type:int,relationMeta={};
		mobile_app	app('$(object)'), verb: false, required: true, referenceBy: guideSlideList,type:mobile_app,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=guide_slide, features=root} 

} depth=2; isRoot = false

change_request_type{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('信息反馈|商户注册|产品附加规格|确认加入|完善信息并入库|修改附加规格|创建交接单|入库|自定义|编辑备注|更新个人信息|完善信息|确认|批准加入|完善信息|转移管理员|完善配送|审核加入|修改产品|完善信息|备注|产品附加规格|商户基础信息|修改配送信息|完善信息|修改附加规格|上架|提交客户审核|同意代下|完成审核|自定义产品|配送信息|复制产品|修改订单|完善信息|设置商户下班时间|提交新单|审批加入+姓名|设置单次配送最大量|转移管理员|自定义|编辑配送任务|产品附加规格|下架|完善信息|创建配送任务|备注|代客确认|确认交接|完善信息'), verb: false, required: true,type:string,relationMeta={};
		string	code('MORE_SUPPLIER_PRODUCT|SELLER_REGISTER|EDIT_ADDITIONAL_SPEC_WHEN_INIT|CONFIRM_JOIN|UPDATE_MERCHANT_INFO_WHEN_INBOUND|EDIT_ADDITIONAL_SPEC_WHEN_CREATE_IN_QUOTE|CREATE_HANDOVER_TASK|PRODUCT_INBOUND|CUSTOM_PRODUCT_WHEN_QUOTE_BY_PRODUCT|EDIT_COMMENT|UPDATE_PERSONAL_INFO|UPDATE_MERCHANT_INFO_FROM_SELLER_HOME|BUYER_BIC_CONFIRM|APPROVE_JOIN_BUYER|UPDATE_BUYER_INFO_WHEN_CONFIRM_QUOTE|COMPANY_ADMIN_TRANSFER|BUYER_UPDATE_DELIVERY_INFO|BUYER|UPDATE_PRODUCT_INFO|UPDATE_MERCHANT_INFO_WHEN_QUOTE|UPDATE_COLLEAGUE_INFO|EDIT_ADDITIONAL_SPEC_WHEN_QUOTE|UPDATE_COMPANY_INFO|UPDATE_DELIVERY_INFO|UPDATE_MERCHANT_INFO_WHEN_VIEW_BUYER|EDIT_ADDITIONAL_SPEC_WHEN_CREATE|PRODUCT_ON_SHELF|SEND_TO_CUSTOMER_AUDIT|CONFIRM_QUOTE|AUDIT_ORDER|CUSTOM_PRODUCT_WHEN_INITIAL|BUYER_DELIVERY_INFO|COPY_PRODUCT|BUYER_UPDATE_ORDER|SELLER_UPDATE_MERCHANT_INFO|UPDATE_MERCHANT_OFF_TIME|CREATE_SPLIT_ORDER|AUDIT_JOIN_APPLY|UPDATE_MERCHANT_DELIVERY_LIMIT|BUYER_ADMIN_TRANSFER|CUSTOM_PRODUCT_WHEN_QUOTE|UPDATE_DELIVERY_TASK|EDIT_ADDITIONAL_SPEC_WHEN_REVIEW_INIT|PRODUCT_OFF_SHELF|UPDATE_MERCHANT_INFO_WHEN_INVITE|CREATE_DELIVERY_TASK|EDIT_BUYER_COLLEAGUE|CONFIRM_AS_CUSTOMER|CONFIRM_DELIVERY_TASK|UPDATE_BUYER_INFO_WHEN_ORDER'), verb: false, required: true,type:string,relationMeta={};
		string	icon('bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars'), verb: false, required: true,type:string,relationMeta={};
		int	display_order('1|2|3|4|5|6'), verb: false, required: true,type:int,relationMeta={};
		string_longtext	bind_types('text()'), verb: false, required: true,type:text,relationMeta={};
		string_longtext	step_configuration('text()'), verb: false, required: true,type:text,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: changeRequestTypeList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(2){
		changeRequestList	request_type(__no_group)--request_type;
		eventInfoInCrList	change_request_type(__no_group)--change_request_type;
	}
	meta {name=change_request_type, identified_by=code, features=cr_type} 

} depth=1; isRoot = false

change_request{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('注册|开始考试|答题'), verb: false, required: true,type:string,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		string_client_ip	remote_ip('remoteIp()'), verb: false, required: true,type:string_client_ip,relationMeta={};
		string	city_by_ip('四川省成都市|新疆维吾尔自治区阿卡大礼县'), verb: false, required: false,type:string,relationMeta={};
		change_request_type	request_type('$(object)'), verb: false, required: true, referenceBy: changeRequestList,type:change_request_type,relationMeta={};
		bool	commited('false'), verb: false, required: true,type:bool,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: changeRequestList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(8){
		eventTbdList	change_request(__no_group)--change_request;
		eventSellerInfoList	change_request(__no_group)--change_request;
		eventAdminTransferList	change_request(__no_group)--change_request;
		eventUpdateMerchantOffTimeList	change_request(__no_group)--change_request;
		eventUpdateMerchantDeliveryLimitList	change_request(__no_group)--change_request;
		eventEmployeeApproveList	change_request(__no_group)--change_request;
		eventUpdateAdditionalSpecList	change_request(__no_group)--change_request;
		eventInfoInCrList	change_request(__no_group)--change_request;
	}
	meta {name=change_request, features=change_request} 

} depth=2; isRoot = false

event_tbd{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	tbd('tbd|字段待定义'), verb: false, required: true,type:string,relationMeta={};
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventTbdList,type:change_request,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {bind_with_cr_type=MORE_SUPPLIER_PRODUCT|CONFIRM_JOIN|UPDATE_MERCHANT_INFO_WHEN_INBOUND|CREATE_HANDOVER_TASK|PRODUCT_INBOUND|CUSTOM_PRODUCT_WHEN_QUOTE_BY_PRODUCT|EDIT_COMMENT|UPDATE_PERSONAL_INFO|BUYER_BIC_CONFIRM|UPDATE_BUYER_INFO_WHEN_CONFIRM_QUOTE|BUYER_UPDATE_DELIVERY_INFO|BUYER|UPDATE_PRODUCT_INFO|UPDATE_MERCHANT_INFO_WHEN_QUOTE|UPDATE_COMPANY_INFO|UPDATE_DELIVERY_INFO|UPDATE_MERCHANT_INFO_WHEN_VIEW_BUYER|PRODUCT_ON_SHELF|SEND_TO_CUSTOMER_AUDIT|CONFIRM_QUOTE|AUDIT_ORDER|CUSTOM_PRODUCT_WHEN_INITIAL|BUYER_DELIVERY_INFO|COPY_PRODUCT|BUYER_UPDATE_ORDER|CREATE_SPLIT_ORDER|CUSTOM_PRODUCT_WHEN_QUOTE|UPDATE_DELIVERY_TASK|PRODUCT_OFF_SHELF|CREATE_DELIVERY_TASK|EDIT_BUYER_COLLEAGUE|CONFIRM_AS_CUSTOMER|CONFIRM_DELIVERY_TASK|UPDATE_BUYER_INFO_WHEN_ORDER, name=event_tbd, features=event} 

} depth=3; isRoot = false

event_seller_info{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('name|单位名称'), verb: false, required: true,type:string,relationMeta={};
		string	agency_social_code('agency social code|信用代码'), verb: false, required: true,type:string,relationMeta={};
		string	contact_name('contact name|联系人'), verb: false, required: true,type:string,relationMeta={};
		string_china_mobile_phone	contact_mobile('13300001234'), verb: false, required: true,type:string_china_mobile_phone,relationMeta={};
		string	address('address|单位地址'), verb: false, required: true,type:string,relationMeta={};
		string_image	logo('logo.jpg'), verb: false, required: true,type:string_image,relationMeta={};
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventSellerInfoList,type:change_request,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {bind_with_cr_type=SELLER_REGISTER|UPDATE_MERCHANT_INFO_FROM_SELLER_HOME|SELLER_UPDATE_MERCHANT_INFO|UPDATE_MERCHANT_INFO_WHEN_INVITE, name=event_seller_info, features=event} 

} depth=3; isRoot = false

event_admin_transfer{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	merchant_id('merchant id|组织ID'), verb: false, required: true,type:string,relationMeta={};
		personal_user	new_admin('$(object)'), verb: false, required: true, referenceBy: eventAdminTransferList,type:personal_user,relationMeta={};
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventAdminTransferList,type:change_request,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {bind_with_cr_type=COMPANY_ADMIN_TRANSFER|BUYER_ADMIN_TRANSFER, name=event_admin_transfer, features=event} 

} depth=3; isRoot = false

event_update_merchant_off_time{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	merchant_id('merchant id|组织ID'), verb: false, required: true,type:string,relationMeta={};
		off_time	off_time('$(object)'), verb: false, required: true, referenceBy: eventUpdateMerchantOffTimeList,type:off_time,relationMeta={};
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventUpdateMerchantOffTimeList,type:change_request,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {bind_with_cr_type=UPDATE_MERCHANT_OFF_TIME, name=event_update_merchant_off_time, features=event} 

} depth=3; isRoot = false

event_update_merchant_delivery_limit{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	merchant_id('merchant id|组织ID'), verb: false, required: true,type:string,relationMeta={};
		string	delivery_limit('delivery limit|最大值'), verb: false, required: true,type:string,relationMeta={};
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventUpdateMerchantDeliveryLimitList,type:change_request,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {bind_with_cr_type=UPDATE_MERCHANT_DELIVERY_LIMIT, name=event_update_merchant_delivery_limit, features=event} 

} depth=3; isRoot = false

event_employee_approve{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	employee_id('employee id|被批准的岗位'), verb: false, required: true,type:string,relationMeta={};
		string	name('name|姓名'), verb: false, required: false,type:string,relationMeta={};
		string_china_mobile_phone	mobile('13300001234'), verb: false, required: false,type:string_china_mobile_phone,relationMeta={};
		string	employee_comment('employee comment|员工备注'), verb: false, required: false,type:string,relationMeta={};
		string_longtext	approve_comment('text()'), verb: false, required: false,type:text,relationMeta={};
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventEmployeeApproveList,type:change_request,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {bind_with_cr_type=APPROVE_JOIN_BUYER|UPDATE_COLLEAGUE_INFO|AUDIT_JOIN_APPLY, name=event_employee_approve, features=event} 

} depth=3; isRoot = false

event_update_additional_spec{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	scene('scene|使用场景'), verb: false, required: true,type:string,relationMeta={};
		string	template_id('template id|产品模板'), verb: false, required: false,type:string,relationMeta={};
		string	product_id('product id|产品'), verb: false, required: false,type:string,relationMeta={};
		string	merchant_id('merchant id|商户'), verb: false, required: true,type:string,relationMeta={};
		string	additional_spec('additional spec|附加规格'), verb: false, required: false,type:string,relationMeta={};
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventUpdateAdditionalSpecList,type:change_request,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {bind_with_cr_type=EDIT_ADDITIONAL_SPEC_WHEN_INIT|EDIT_ADDITIONAL_SPEC_WHEN_CREATE_IN_QUOTE|EDIT_ADDITIONAL_SPEC_WHEN_QUOTE|EDIT_ADDITIONAL_SPEC_WHEN_CREATE|EDIT_ADDITIONAL_SPEC_WHEN_REVIEW_INIT, name=event_update_additional_spec, features=event} 

} depth=3; isRoot = false

event_info_in_cr{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventInfoInCrList,type:change_request,relationMeta={};
		change_request_type	change_request_type('$(object)'), verb: false, required: true, referenceBy: eventInfoInCrList,type:change_request_type,relationMeta={};
		string	status('OPENING|COMMITTED|PRESET'), verb: false, required: true,type:string,relationMeta={};
		string	initiator_type('SecUser|Merchant'), verb: false, required: true,type:string,relationMeta={};
		string	initiator_id('SU000001|M0000001'), verb: false, required: true,type:string,relationMeta={};
		string_longtext	events_info('text()'), verb: false, required: true,type:text,relationMeta={};
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=event_info_in_cr, features=root, max_count=1000000000} 

} depth=3; isRoot = false

system_processing_instance{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	title('提现流程|拍卖流程'), verb: false, required: true,type:string,relationMeta={};
		string	type('WITHDRAW|BIDDING'), verb: false, required: true,type:string,relationMeta={};
		string	target_identity('DemandProposal_DP000001|ArtworkAuction_AA000001'), verb: false, required: true,type:string,relationMeta={};
		string	brief('红星造纸厂提现|《远秋近春》拍卖'), verb: false, required: true,type:string,relationMeta={};
		string_longtext	detail('text()'), verb: false, required: true,type:text,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: systemProcessingInstanceList,type:platform,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=system_processing_instance, features=log,settings,no_sample_data, identified_by=target_identity} 

} depth=1; isRoot = false

mobile_app{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('移动端配置'), verb: false, required: true,type:string,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(5){
		systemAnnouncementList	mobile_app(__no_group)--mobile_app;
		guideTypeList	app(__no_group)--app;
		guideSlideList	app(__no_group)--app;
		pageList	mobile_app(页面管理)--mobile_app;
		pageTypeList	mobile_app(__no_group)--mobile_app;
	}
	meta {name=mobile_app, features=root} 

} depth=0; isRoot = true

page{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	page_title('首页'), verb: false, required: true,type:string,relationMeta={};
		string	link_to_url('首页'), verb: false, required: true,type:string,relationMeta={};
		page_type	page_type('$(object)'), verb: false, required: true, referenceBy: pageList,type:page_type,relationMeta={};
		int	display_order('1|2|3'), verb: false, required: true,type:int,relationMeta={};
		mobile_app	mobile_app('$(object)'), verb: false, required: true, referenceBy: pageList,type:mobile_app,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(3){
		slideList	page(__no_group)--page;
		uiActionList	page(__no_group)--page;
		sectionList	page(__no_group)--page;
	}
	meta {name=page, features=root, vg4mobile_app=页面管理} 

} depth=2; isRoot = false

page_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('首页|我的|Generic Page|Listof Page|功能大厅|普通'), verb: false, required: true,type:string,relationMeta={};
		string	code('home|me|generic-page|listof-page|service-center|simple'), verb: false, required: true,type:string,relationMeta={};
		mobile_app	mobile_app('$(object)'), verb: false, required: true, referenceBy: pageTypeList,type:mobile_app,relationMeta={};
		bool	footer_tab('true|false'), verb: false, required: true,type:bool,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		pageList	page_type(__no_group)--page_type;
	}
	meta {name=page_type, features=status, identified_by=code} 

} depth=1; isRoot = false

slide{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('首页Focus的内容'), verb: false, required: true,type:string,relationMeta={};
		int	display_order('1|2|3'), verb: false, required: true,type:int,relationMeta={};
		string_image	image_url('https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_1.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_2.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_3.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_4.jpg'), verb: false, required: true,type:string_image,relationMeta={};
		string_image	video_url('https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_1.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_2.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_3.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_4.jpg'), verb: false, required: true,type:string_image,relationMeta={};
		string	link_to_url('|/section/article/'), verb: false, required: false,type:string,relationMeta={};
		page	page('$(object)'), verb: false, required: true, referenceBy: slideList,type:page,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=slide, features=root} 

} depth=3; isRoot = false

ui_action{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	code('submit|share|view|more'), verb: false, required: true,type:string,relationMeta={};
		string	icon('icon_edit|icon_share|icon_eye|icon_more'), verb: false, required: true,type:string,relationMeta={};
		string	title('提交|分享|查看|更多'), verb: false, required: true,type:string,relationMeta={};
		int	display_order('1|2|3'), verb: false, required: true,type:int,relationMeta={};
		string	brief('Submit|Share|View|View More'), verb: false, required: true,type:string,relationMeta={};
		string_image	image_url('https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_1.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_2.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_3.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_4.jpg'), verb: false, required: true,type:string_image,relationMeta={};
		string	link_to_url('wxappService/section/article/'), verb: false, required: true,type:string,relationMeta={};
		string_longtext	extra_data('text()'), verb: false, required: true,type:text,relationMeta={};
		page	page('$(object)'), verb: false, required: true, referenceBy: uiActionList,type:page,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=ui_action, features=root} 

} depth=3; isRoot = false

section{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	title('文章|作品'), verb: false, required: true,type:string,relationMeta={};
		string	brief('Article|Artwork'), verb: false, required: true,type:string,relationMeta={};
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image,relationMeta={};
		int	display_order('1|2|3'), verb: false, required: true,type:int,relationMeta={};
		string	view_group('icon_edit|icon_share|icon_eye|icon_more'), verb: false, required: true,type:string,relationMeta={};
		string	link_to_url('wxappService/section/article/'), verb: false, required: true,type:string,relationMeta={};
		page	page('$(object)'), verb: false, required: true, referenceBy: sectionList,type:page,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=section, features=root} 

} depth=3; isRoot = false

user_domain{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('用户区域'), verb: false, required: true,type:string,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(3){
		userAllowListList	domain(__no_group)--domain;
		secUserList	domain(__no_group)--domain;
		publicKeyTypeList	domain(__no_group)--domain;
	}
	meta {name=user_domain, features=ootb} 

} depth=0; isRoot = true

user_allow_list{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string_china_mobile_phone	user_identity('13308188512|13808188512'), verb: false, required: true,type:string_china_mobile_phone,relationMeta={};
		string	user_special_functions(';supervisor;|;tester;ios-spokesperson;'), verb: false, required: true,type:string,relationMeta={};
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: userAllowListList,type:user_domain,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=user_allow_list, features=syssetting} 

} depth=1; isRoot = false

sec_user{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	login('login'), verb: false, required: true,type:string,relationMeta={};
		string_china_mobile_phone	mobile('13900000001'), verb: false, required: true,type:string_china_mobile_phone,relationMeta={};
		string_email	email('suddy_chang@163.com'), verb: false, required: true,type:string_email,relationMeta={};
		string_password	pwd('*******'), verb: false, required: true,type:string_password,relationMeta={};
		string	weixin_openid('wx123456789abcdefghijklmn'), verb: false, required: true,type:string,relationMeta={};
		string	weixin_appid('wxapp12098410239840'), verb: false, required: true,type:string,relationMeta={};
		string	access_token('jwt_token_12345678'), verb: false, required: true,type:string,relationMeta={};
		int	verification_code('0|9999999'), verb: false, required: true,type:int,relationMeta={};
		date_time	verification_code_expire('2099-12-31T09:09:09'), verb: false, required: true,type:date_time,relationMeta={};
		date_time	last_login_time('2099-12-31T09:09:09'), verb: false, required: false,type:date_time,relationMeta={};
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: secUserList,type:user_domain,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(5){
		userAppList	sec_user(__no_group)--sec_user;
		loginHistoryList	sec_user(__no_group)--sec_user;
		wechatWorkappIdentityList	sec_user(__no_group)--sec_user;
		wechatMiniappIdentityList	sec_user(__no_group)--sec_user;
		keypairIdentityList	sec_user(__no_group)--sec_user;
	}
	meta {name=sec_user, features=ootb, identified_by=login,email,mobile} 

} depth=1; isRoot = false

user_app{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	title('审车平台|账户管理|接车公司|审车公司|维修公司|顾客'), verb: false, required: true,type:string,relationMeta={};
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: userAppList,type:sec_user,relationMeta={};
		string	app_icon('users|bank|wechat|bar-chart|user|users'), verb: false, required: true,type:string,relationMeta={};
		bool	full_access('true'), verb: false, required: true,type:bool,relationMeta={};
		string	permission('MXWR|MXWR'), verb: false, required: true,type:string,relationMeta={};
		string	object_type('CarInspectionPlatform|UserDomain|CarReceivingServiceCompany|CarInspectionServiceCompany|CarRepairingServiceCompany|CustomerInfo'), verb: false, required: true,type:string,relationMeta={};
		string	object_id('CIP000001|UD000001|CRSC000001|CISC000001|CRSC000001|CI000001'), verb: false, required: true,type:string,relationMeta={};
		string	location('/link/to/app'), verb: false, required: true,type:string,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(2){
		quickLinkList	app(__no_group)--app;
		listAccessList	app(__no_group)--app;
	}
	meta {name=user_app, features=ootb} 

} depth=2; isRoot = false

quick_link{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('列表'), verb: false, required: true,type:string,relationMeta={};
		string	icon('facebook|google'), verb: false, required: true,type:string,relationMeta={};
		string_image	image_path('y-200-200-red.jpg'), verb: false, required: true,type:string_image,relationMeta={};
		string	link_target('列表'), verb: false, required: true,type:string,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		user_app	app('$(object)'), verb: false, required: true, referenceBy: quickLinkList,type:user_app,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=quick_link, features=ootb} 

} depth=3; isRoot = false

list_access{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('列表'), verb: false, required: true,type:string,relationMeta={};
		string	internal_name('levelOneCategoryList'), verb: false, required: true,type:string,relationMeta={};
		bool	read_permission('true'), verb: false, required: true,type:bool,relationMeta={};
		bool	create_permission('true'), verb: false, required: true,type:bool,relationMeta={};
		bool	delete_permission('true'), verb: false, required: true,type:bool,relationMeta={};
		bool	update_permission('true'), verb: false, required: true,type:bool,relationMeta={};
		bool	execution_permission('true'), verb: false, required: true,type:bool,relationMeta={};
		user_app	app('$(object)'), verb: false, required: true, referenceBy: listAccessList,type:user_app,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=list_access, features=ootb} 

} depth=3; isRoot = false

login_history{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		date_time_create	login_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		string	from_ip('192.168.1.1|192.168.1.2'), verb: false, required: true,type:string,relationMeta={};
		string	description('登陆成功'), verb: false, required: true,type:string,relationMeta={};
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: loginHistoryList,type:sec_user,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=login_history, features=syslog} 

} depth=2; isRoot = false

candidate_container{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('我只是一个容器'), verb: false, required: true,type:string,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		candidateElementList	container(__no_group)--container;
	}
	meta {name=candidate_container, features=internal,ootb} 

} depth=0; isRoot = true

candidate_element{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('搜索到的匹配字段'), verb: false, required: true,type:string,relationMeta={};
		string	type('类型描述'), verb: false, required: true,type:string,relationMeta={};
		string_image	image('1.jpg'), verb: false, required: true,type:string_image,relationMeta={};
		candidate_container	container('$(object)'), verb: false, required: true, referenceBy: candidateElementList,type:candidate_container,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=candidate_element, features=internal,ootb} 

} depth=1; isRoot = false

wechat_workapp_identity{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	corp_id('corporation123'), verb: false, required: true,type:string,relationMeta={};
		string	user_id('user123'), verb: false, required: true,type:string,relationMeta={};
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: wechatWorkappIdentityList,type:sec_user,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		date_time	last_login_time('2100-01-01T00:00:00'), verb: false, required: false,type:date_time,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=wechat_workapp_identity, features=root} 

} depth=2; isRoot = false

wechat_miniapp_identity{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	open_id('wechat_open_id_1234567890'), verb: false, required: true,type:string,relationMeta={};
		string	app_id('wechat_miniapp_id_1234567890'), verb: false, required: true,type:string,relationMeta={};
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: wechatMiniappIdentityList,type:sec_user,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		date_time	last_login_time('2100-01-01T00:00:00'), verb: false, required: false,type:date_time,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=wechat_miniapp_identity, features=root} 

} depth=2; isRoot = false

keypair_identity{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string_longtext	public_key('text()'), verb: false, required: true,type:text,relationMeta={};
		public_key_type	key_type('$(object)'), verb: false, required: true, referenceBy: keypairIdentityList,type:public_key_type,relationMeta={};
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: keypairIdentityList,type:sec_user,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=keypair_identity, features=root} 

} depth=2; isRoot = false

public_key_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	key_alg('RSA|EC'), verb: false, required: true,type:string,relationMeta={};
		string	sign_alg('SHA256withRSA|SHA256withECDSA'), verb: false, required: true,type:string,relationMeta={};
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: publicKeyTypeList,type:user_domain,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		keypairIdentityList	key_type(__no_group)--key_type;
	}
	meta {name=public_key_type, features=root} 

} depth=1; isRoot = false

tree_node{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	node_id('node000001'), verb: false, required: true,type:string,relationMeta={};
		string	node_type('nodetype'), verb: false, required: true,type:string,relationMeta={};
		int	left_value('1'), verb: false, required: true,type:int,relationMeta={};
		int	right_value('10'), verb: false, required: true,type:int,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=tree_node, features=root} 

} depth=0; isRoot = true

platform{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('新途气体交易平台'), verb: false, required: true,type:string,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(38){
		provinceList	platform(__no_group)--platform;
		cityList	platform(__no_group)--platform;
		districtList	platform(__no_group)--platform;
		roleList	platform(__no_group)--platform;
		employeeStatusList	platform(__no_group)--platform;
		invitationTypeList	platform(__no_group)--platform;
		offTimeList	platform(__no_group)--platform;
		merchantList	platform(__no_group)--platform;
		personalUserList	platform(__no_group)--platform;
		organizationIdentityList	platform(__no_group)--platform;
		employeeList	platform(__no_group)--platform;
		gasContainerList	platform(__no_group)--platform;
		fillMediumList	platform(__no_group)--platform;
		nominalVolumeList	platform(__no_group)--platform;
		fillVolumeList	platform(__no_group)--platform;
		nominalPressureList	platform(__no_group)--platform;
		gasContainerCategoryList	platform(__no_group)--platform;
		gasComponentList	platform(__no_group)--platform;
		checkStatusList	platform(__no_group)--platform;
		actionTypeList	platform(__no_group)--platform;
		productStatusList	platform(__no_group)--platform;
		orderStatusList	platform(__no_group)--platform;
		deliverTypeList	platform(__no_group)--platform;
		shippingStatusList	platform(__no_group)--platform;
		deliverTaskStatusList	platform(__no_group)--platform;
		deliveryReceiptStatusList	platform(__no_group)--platform;
		gasCylinderList	platform(__no_group)--platform;
		gasProductTemplateList	platform(__no_group)--platform;
		gasProductList	platform(__no_group)--platform;
		orderActionTypeList	platform(__no_group)--platform;
		iconConfigurationList	platform(__no_group)--platform;
		systemLevelConfigurationList	platform(__no_group)--platform;
		systemLevelImagesList	platform(__no_group)--platform;
		systemLevelContentList	platform(__no_group)--platform;
		systemLevelNumberList	platform(__no_group)--platform;
		changeRequestTypeList	platform(__no_group)--platform;
		changeRequestList	platform(__no_group)--platform;
		systemProcessingInstanceList	platform(__no_group)--platform;
	}
	meta {name=platform, features=laboratory_function,root} 

} depth=0; isRoot = true

province{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('四川|北京'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: provinceList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		cityList	province(__no_group)--province;
	}
	meta {name=province, features=setting} 

} depth=1; isRoot = false

city{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('成都|北京'), verb: false, required: true,type:string,relationMeta={};
		province	province('$(object)'), verb: false, required: true, referenceBy: cityList,type:province,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: cityList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		districtList	city(__no_group)--city;
	}
	meta {name=city, features=setting} 

} depth=2; isRoot = false

district{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('成华区|朝阳区|锦江区|海淀区'), verb: false, required: true,type:string,relationMeta={};
		city	city('$(object)'), verb: false, required: true, referenceBy: districtList,type:city,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: districtList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=district, features=setting} 

} depth=3; isRoot = false

role{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('管理员|员工'), verb: false, required: true,type:string,relationMeta={};
		string	code('ADMIN|EMPLOYEE'), verb: false, required: true,type:string,relationMeta={};
		string	description('管理人员|员工'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: roleList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		employeeList	role(__no_group)--role;
	}
	meta {name=role, features=status} 

} depth=1; isRoot = false

employee_status{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('正常|已删除|待审核'), verb: false, required: true,type:string,relationMeta={};
		string	code('NORMAL|REMOVED|TO_BE_APPROVE'), verb: false, required: true,type:string,relationMeta={};
		string	description('正常|已删除|待审核'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: employeeStatusList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		employeeList	status(__no_group)--status;
	}
	meta {name=employee_status, features=status} 

} depth=1; isRoot = false

invitation_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('邀请同事|邀请商家|邀请用户|分享'), verb: false, required: true,type:string,relationMeta={};
		string	code('COLLEAGUE|SUPPLIER|CUSTOMER|COMMON'), verb: false, required: true,type:string,relationMeta={};
		string	description('邀请同事|邀请商家|邀请用户|分享'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: invitationTypeList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		invitationRecordList	type(__no_group)--type;
	}
	meta {name=invitation_type, features=status} 

} depth=1; isRoot = false

off_time{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('14:00|15:00|16:00|17:00|18:00|19:00|20:00|21:00'), verb: false, required: true,type:string,relationMeta={};
		string	code('H14_00|H15_00|H16_00|H17_00|H18_00|H19_00|H20_00|H21_00'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: offTimeList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(2){
		merchantList	off_time(__no_group)--off_time;
		eventUpdateMerchantOffTimeList	off_time(__no_group)--off_time;
	}
	meta {name=off_time, features=status} 

} depth=1; isRoot = false

merchant{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('肯德基成都采购中心|张晓丹|妃妤婔婒'), verb: false, required: true,type:string,relationMeta={};
		off_time	off_time('$(object)'), verb: false, required: true, referenceBy: merchantList,type:off_time,relationMeta={};
		int	delivery_limit('10000'), verb: false, required: true,type:int,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: merchantList,type:platform,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(20){
		organizationIdentityList	merchant(__no_group)--merchant;
		warehouseList	merchant(__no_group)--merchant;
		employeeList	merchant(__no_group)--merchant;
		supplyRelationshipListAsSupplier	supplier(__no_group)--supplier;
		supplyRelationshipListAsCustomer	customer(__no_group)--supplier;
		merchantCylinderList	merchant(__no_group)--merchant;
		merchantCylinderRecordList	merchant(__no_group)--merchant;
		customerCylinderListAsSeller	seller(__no_group)--seller;
		customerCylinderListAsCustomer	customer(__no_group)--seller;
		customerCylinderRecordListAsSeller	seller(__no_group)--seller;
		customerCylinderRecordListAsCustomer	customer(__no_group)--seller;
		gasProductList	merchant(__no_group)--merchant;
		gasProductInventoryRecordList	merchant(__no_group)--merchant;
		deliverTaskList	merchant(__no_group)--merchant;
		mainOrderListAsBuyer	buyer(__no_group)--buyer;
		mainOrderListAsSeller	seller(__no_group)--buyer;
		gasShippingGroupListAsSeller	seller(__no_group)--seller;
		gasShippingGroupListAsBuyer	buyer(__no_group)--seller;
		deliveryReceiptListAsSeller	seller(__no_group)--seller;
		deliveryReceiptListAsBuyer	buyer(__no_group)--seller;
	}
	meta {name=merchant, features=log} 

} depth=2; isRoot = false

personal_user{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('张喜来|黄波|王煜东|袁明星|周廷志|刘洋'), verb: false, required: false,type:string,relationMeta={};
		string	nick_name('张喜来|黄波|王煜东|袁明星|周廷志|刘洋'), verb: false, required: false,type:string,relationMeta={};
		string_china_mobile_phone	mobile('13308188512'), verb: false, required: false,type:string_china_mobile_phone,relationMeta={};
		string_image	avatar('avatar.jpg'), verb: false, required: true,type:string_image,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: personalUserList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(6){
		individualIdentityList	personal_user(__no_group)--personal_user;
		userWorkingInfoList	user(__no_group)--user;
		employeeList	person_information(__no_group)--person_information;
		deliverTaskList	deliver_staff(__no_group)--deliver_staff;
		mainOrderList	creator(__no_group)--creator;
		eventAdminTransferList	new_admin(__no_group)--new_admin;
	}
	meta {name=personal_user, features=merchant} 

} depth=1; isRoot = false

individual_identity{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('张喜来|黄波|王煜东|袁明星|周廷志|刘洋'), verb: false, required: false,type:string,relationMeta={};
		personal_user	personal_user('$(object)'), verb: false, required: true, referenceBy: individualIdentityList,type:personal_user,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=individual_identity, features=log} 

} depth=2; isRoot = false

user_working_info{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		personal_user	user('$(object)'), verb: false, required: true, referenceBy: userWorkingInfoList,type:personal_user,relationMeta={};
		employee	employee('$(object)'), verb: false, required: true, referenceBy: userWorkingInfoList,type:employee,relationMeta={};
		string	job_role('买家|卖家'), verb: false, required: true,type:string,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=user_working_info, features=root} 

} depth=4; isRoot = false

organization_identity{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('双链科技'), verb: false, required: true,type:string,relationMeta={};
		string_taxpayerid	agency_social_code('91510100MA6C66P74M'), verb: false, required: false,type:string_taxpayerid,relationMeta={};
		string	contact_name('张三'), verb: false, required: true,type:string,relationMeta={};
		string_china_mobile_phone	mobile('13888888888'), verb: false, required: true,type:string_china_mobile_phone,relationMeta={};
		string	address('天府三街'), verb: false, required: true,type:string,relationMeta={};
		string_image	logo('1.jpg'), verb: false, required: false,type:string_image,relationMeta={};
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: organizationIdentityList,type:merchant,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: organizationIdentityList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=organization_identity, features=root} 

} depth=3; isRoot = false

warehouse{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('天府三街'), verb: false, required: true,type:string,relationMeta={};
		string	contact_name('张三'), verb: false, required: true,type:string,relationMeta={};
		string_china_mobile_phone	mobile('13888888888'), verb: false, required: true,type:string_china_mobile_phone,relationMeta={};
		string	address('天府三街'), verb: false, required: true,type:string,relationMeta={};
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: warehouseList,type:merchant,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=warehouse, features=root} 

} depth=3; isRoot = false

invitation_record{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		employee	inviter('$(object)'), verb: false, required: true, referenceBy: invitationRecordListAsInviter,type:employee,relationMeta={};
		employee	invitee('$(object)'), verb: false, required: true, referenceBy: invitationRecordListAsInvitee,type:employee,relationMeta={};
		invitation_type	type('$(object)'), verb: false, required: true, referenceBy: invitationRecordList,type:invitation_type,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=invitation_record, features=log} 

} depth=4; isRoot = false

employee{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		personal_user	person_information('$(object)'), verb: false, required: true, referenceBy: employeeList,type:personal_user,relationMeta={};
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: employeeList,type:merchant,relationMeta={};
		role	role('$(object)'), verb: false, required: true, referenceBy: employeeList,type:role,relationMeta={};
		employee_status	status('$(object)'), verb: false, required: true, referenceBy: employeeList,type:employee_status,relationMeta={};
		string	comment('司机'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: employeeList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(11){
		userWorkingInfoList	employee(__no_group)--employee;
		invitationRecordListAsInviter	inviter(__no_group)--inviter;
		invitationRecordListAsInvitee	invitee(__no_group)--inviter;
		merchantCylinderRecordList	actor(__no_group)--actor;
		customerCylinderRecordList	actor(__no_group)--actor;
		customerCylinderRecordEvidenceList	actor(__no_group)--actor;
		gasProductInventoryRecordList	actor(__no_group)--actor;
		gasShippingGroupList	creator(__no_group)--creator;
		deliveryReceiptListAsCreator	creator(__no_group)--creator;
		deliveryReceiptListAsConfirmer	confirmer(__no_group)--creator;
		orderOperationRecordList	actor(__no_group)--actor;
	}
	meta {name=employee, features=root} 

} depth=3; isRoot = false

supply_relationship{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		merchant	supplier('$(object)'), verb: false, required: true, referenceBy: supplyRelationshipListAsSupplier,type:merchant,relationMeta={};
		merchant	customer('$(object)'), verb: false, required: true, referenceBy: supplyRelationshipListAsCustomer,type:merchant,relationMeta={};
		string	supplier_comment('客户1'), verb: false, required: true,type:string,relationMeta={};
		string	customer_comment('供应商1'), verb: false, required: true,type:string,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=supply_relationship, features=root} 

} depth=3; isRoot = false

gas_container{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('3*3散瓶格'), verb: false, required: true,type:string,relationMeta={};
		string	unit('集格'), verb: false, required: true,type:string,relationMeta={};
		int	quantity('9'), verb: false, required: true,type:int,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: gasContainerList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		gasCylinderList	gas_container(__no_group)--gas_container;
	}
	meta {name=gas_container, features=root} 

} depth=1; isRoot = false

fill_medium{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('氧'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: fillMediumList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		gasCylinderList	fill_medium(__no_group)--fill_medium;
	}
	meta {name=fill_medium, features=root} 

} depth=1; isRoot = false

nominal_volume{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	volume('50升'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: nominalVolumeList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		gasCylinderList	nominal_volume(__no_group)--nominal_volume;
	}
	meta {name=nominal_volume, features=root} 

} depth=1; isRoot = false

fill_volume{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	volume('50升'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: fillVolumeList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(2){
		gasProductTemplateList	fill_volume(__no_group)--fill_volume;
		gasProductList	fill_volume(__no_group)--fill_volume;
	}
	meta {name=fill_volume, features=root} 

} depth=1; isRoot = false

nominal_pressure{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	pressure('20Mpa'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: nominalPressureList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		gasCylinderList	nominal_pressure(__no_group)--nominal_pressure;
	}
	meta {name=nominal_pressure, features=root} 

} depth=1; isRoot = false

gas_container_category{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('绝热气瓶'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: gasContainerCategoryList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		gasCylinderList	gas_container_category(__no_group)--gas_container_category;
	}
	meta {name=gas_container_category, features=root} 

} depth=1; isRoot = false

gas_component{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('氧'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: gasComponentList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(2){
		gasProductTemplateComponentList	component(__no_group)--component;
		gasProductComponentList	component(__no_group)--component;
	}
	meta {name=gas_component, features=root} 

} depth=1; isRoot = false

check_status{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('待买家确认|买家已确认'), verb: false, required: true,type:string,relationMeta={};
		string	code('WAITING_BUYER_CONFIRM|BUYER_CONFIRMED'), verb: false, required: true,type:string,relationMeta={};
		string	description('待买家确认|买家已确认'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: checkStatusList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		customerCylinderList	status(__no_group)--status;
	}
	meta {name=check_status, features=status} 

} depth=1; isRoot = false

action_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('空瓶盘库|空瓶入库|生产入库|订单返瓶|确认接收单|商家提交气瓶盘库|客户确认气瓶盘库|外采入库|接收单入库'), verb: false, required: true,type:string,relationMeta={};
		string	code('CYLINDER_SET|CYLINDER_IN|PRODUCE|ORDER_BACK_CYLINDER|BUYER_CONFIRMED|SELLER_SUBMIT_CYLINDER_SET|CUSTOMER_CONFIRM_CYLINDER_SET|PURCHASE_OUT_OF_SYSTEM|PURCHASE_IN_SYSTEM'), verb: false, required: true,type:string,relationMeta={};
		string	description('空瓶盘库|空瓶入库|生产入库|订单返瓶|确认接收单|商家提交气瓶盘库|客户确认气瓶盘库|外采入库|接收单入库'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: actionTypeList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(3){
		merchantCylinderRecordList	action(__no_group)--action;
		customerCylinderRecordList	action(__no_group)--action;
		gasProductInventoryRecordList	action(__no_group)--action;
	}
	meta {name=action_type, features=status} 

} depth=1; isRoot = false

product_status{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('正常|已下架'), verb: false, required: true,type:string,relationMeta={};
		string	code('NORMAL|REMOVED'), verb: false, required: true,type:string,relationMeta={};
		string	description('正常|已下架'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: productStatusList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		gasProductList	status(__no_group)--status;
	}
	meta {name=product_status, features=status} 

} depth=1; isRoot = false

order_status{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('处理中|待买家确认|买家确认超时|待审核|已提交|待自提|待配送|正在配送|已交接|已完成|已取消'), verb: false, required: true,type:string,relationMeta={};
		string	code('PROCESSING|WAITING_BUYER_CONFIRM|BUYER_CONFIRM_TIMEOUT|WAITING_SELLER_CONFIRM|SUBMITTED|WAITING_BUYER_PICK_UP|WAITING_SELLER_DELIVERY|SELLER_SHIPPING|BUYER_RECEIVED|COMPLETED|CANCELLED'), verb: false, required: true,type:string,relationMeta={};
		string	description('处理中|待买家确认|买家确认超时|待卖家审核|已提交|待自提|待配送|正在配送|已交接|已完成|已取消'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: orderStatusList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		mainOrderList	status(__no_group)--status;
	}
	meta {name=order_status, features=status} 

} depth=1; isRoot = false

deliver_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('配送|自提'), verb: false, required: true,type:string,relationMeta={};
		string	code('DELIVERY|PICKUP'), verb: false, required: true,type:string,relationMeta={};
		string	description('送货上门|自提'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: deliverTypeList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		gasShippingGroupList	shipping_type(__no_group)--shipping_type;
	}
	meta {name=deliver_type, features=status} 

} depth=1; isRoot = false

shipping_status{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('待自提|待发货|正在配送|已签收|已完成|已取消'), verb: false, required: true,type:string,relationMeta={};
		string	code('WAITING_BUYER_PICK_UP|WAITING_SELLER_DELIVERY|SELLER_SHIPPING|BUYER_RECEIVED|COMPLETED|CANCELLED'), verb: false, required: true,type:string,relationMeta={};
		string	description('待自提|待发货|正在配送|已签收|已完成|已取消'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: shippingStatusList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		gasShippingGroupList	shipping_status(__no_group)--shipping_status;
	}
	meta {name=shipping_status, features=status} 

} depth=1; isRoot = false

deliver_task_status{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('待执行|配送中|已完成'), verb: false, required: true,type:string,relationMeta={};
		string	code('PENDING|SHIPPING|COMPLETED'), verb: false, required: true,type:string,relationMeta={};
		string	description('待执行|配送中|已完成'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: deliverTaskStatusList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		deliverTaskList	status(__no_group)--status;
	}
	meta {name=deliver_task_status, features=status} 

} depth=1; isRoot = false

delivery_receipt_status{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('待客户确认|超时未确认|代客户确认|客户已确认'), verb: false, required: true,type:string,relationMeta={};
		string	code('WAITING_BUYER_CONFIRM|BUYER_CONFIRM_TIMEOUT|SELLER_FORCE_CONFIRMED|BUYER_CONFIRMED'), verb: false, required: true,type:string,relationMeta={};
		string	description('待客户确认|超时未确认|代客户确认|客户已确认'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: deliveryReceiptStatusList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		deliveryReceiptList	status(__no_group)--status;
	}
	meta {name=delivery_receipt_status, features=status} 

} depth=1; isRoot = false

gas_cylinder{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('氦50L-20Mpa-散瓶G5/8内螺纹左旋'), verb: false, required: true,type:string,relationMeta={};
		gas_container	gas_container('$(object)'), verb: false, required: true, referenceBy: gasCylinderList,type:gas_container,relationMeta={};
		fill_medium	fill_medium('$(object)'), verb: false, required: true, referenceBy: gasCylinderList,type:fill_medium,relationMeta={};
		nominal_pressure	nominal_pressure('$(object)'), verb: false, required: true, referenceBy: gasCylinderList,type:nominal_pressure,relationMeta={};
		nominal_volume	nominal_volume('$(object)'), verb: false, required: true, referenceBy: gasCylinderList,type:nominal_volume,relationMeta={};
		gas_container_category	gas_container_category('$(object)'), verb: false, required: true, referenceBy: gasCylinderList,type:gas_container_category,relationMeta={};
		string	additional_information('xxx'), verb: false, required: false,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: gasCylinderList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(7){
		merchantCylinderList	cylinder(__no_group)--cylinder;
		merchantCylinderRecordList	cylinder(__no_group)--cylinder;
		customerCylinderList	cylinder(__no_group)--cylinder;
		customerCylinderRecordList	cylinder(__no_group)--cylinder;
		gasProductTemplateList	cylinder(__no_group)--cylinder;
		gasProductList	cylinder(__no_group)--cylinder;
		gasLineItemList	cylinder(__no_group)--cylinder;
	}
	meta {name=gas_cylinder, features=root} 

} depth=2; isRoot = false

merchant_cylinder{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		gas_cylinder	cylinder('$(object)'), verb: false, required: true, referenceBy: merchantCylinderList,type:gas_cylinder,relationMeta={};
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: merchantCylinderList,type:merchant,relationMeta={};
		int	quantity('1'), verb: false, required: true,type:int,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=merchant_cylinder, features=root} 

} depth=3; isRoot = false

merchant_cylinder_record{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: merchantCylinderRecordList,type:merchant,relationMeta={};
		gas_cylinder	cylinder('$(object)'), verb: false, required: true, referenceBy: merchantCylinderRecordList,type:gas_cylinder,relationMeta={};
		int	quantity('1'), verb: false, required: true,type:int,relationMeta={};
		int	update_quantity('1'), verb: false, required: true,type:int,relationMeta={};
		employee	actor('$(object)'), verb: false, required: true, referenceBy: merchantCylinderRecordList,type:employee,relationMeta={};
		action_type	action('$(object)'), verb: false, required: true, referenceBy: merchantCylinderRecordList,type:action_type,relationMeta={};
		string_longtext	comment('text()'), verb: false, required: true,type:text,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=merchant_cylinder_record, features=log} 

} depth=4; isRoot = false

customer_cylinder{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		gas_cylinder	cylinder('$(object)'), verb: false, required: true, referenceBy: customerCylinderList,type:gas_cylinder,relationMeta={};
		merchant	seller('$(object)'), verb: false, required: true, referenceBy: customerCylinderListAsSeller,type:merchant,relationMeta={};
		merchant	customer('$(object)'), verb: false, required: true, referenceBy: customerCylinderListAsCustomer,type:merchant,relationMeta={};
		int	quantity('1'), verb: false, required: true,type:int,relationMeta={};
		string	delta('-1'), verb: false, required: true,type:string,relationMeta={};
		check_status	status('$(object)'), verb: false, required: true, referenceBy: customerCylinderList,type:check_status,relationMeta={};
		date_time	last_check_time('date_time()'), verb: false, required: true,type:date_time,relationMeta={};
		date_time	last_confirm_time('date_time()'), verb: false, required: true,type:date_time,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=customer_cylinder, features=root} 

} depth=3; isRoot = false

customer_cylinder_record{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		gas_cylinder	cylinder('$(object)'), verb: false, required: true, referenceBy: customerCylinderRecordList,type:gas_cylinder,relationMeta={};
		merchant	seller('$(object)'), verb: false, required: true, referenceBy: customerCylinderRecordListAsSeller,type:merchant,relationMeta={};
		merchant	customer('$(object)'), verb: false, required: true, referenceBy: customerCylinderRecordListAsCustomer,type:merchant,relationMeta={};
		int	quantity('1'), verb: false, required: true,type:int,relationMeta={};
		int	update_quantity('1'), verb: false, required: true,type:int,relationMeta={};
		employee	actor('$(object)'), verb: false, required: true, referenceBy: customerCylinderRecordList,type:employee,relationMeta={};
		action_type	action('$(object)'), verb: false, required: true, referenceBy: customerCylinderRecordList,type:action_type,relationMeta={};
		string_longtext	comment('text()'), verb: false, required: true,type:text,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		customerCylinderRecordEvidenceList	record(__no_group)--record;
	}
	meta {name=customer_cylinder_record, features=log} 

} depth=4; isRoot = false

customer_cylinder_record_evidence{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		images	images('images()'), verb: false, required: true,type:images,relationMeta={};
		string_longtext	comment('text()'), verb: false, required: true,type:text,relationMeta={};
		customer_cylinder_record	record('$(object)'), verb: false, required: true, referenceBy: customerCylinderRecordEvidenceList,type:customer_cylinder_record,relationMeta={};
		employee	actor('$(object)'), verb: false, required: true, referenceBy: customerCylinderRecordEvidenceList,type:employee,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=customer_cylinder_record_evidence, features=log} 

} depth=5; isRoot = false

gas_product_template{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('食品添加剂氮气-20Mpa-50L-3*5集装格'), verb: false, required: true,type:string,relationMeta={};
		gas_cylinder	cylinder('$(object)'), verb: false, required: true, referenceBy: gasProductTemplateList,type:gas_cylinder,relationMeta={};
		fill_volume	fill_volume('$(object)'), verb: false, required: true, referenceBy: gasProductTemplateList,type:fill_volume,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: gasProductTemplateList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(3){
		gasProductTemplateComponentList	product_template(__no_group)--product_template;
		gasProductList	template(__no_group)--template;
		gasLineItemList	template(__no_group)--template;
	}
	meta {name=gas_product_template, features=root} 

} depth=3; isRoot = false

gas_product_template_component{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		gas_component	component('$(object)'), verb: false, required: true, referenceBy: gasProductTemplateComponentList,type:gas_component,relationMeta={};
		double	percentage('0.1'), verb: false, required: true,type:double,relationMeta={};
		gas_product_template	product_template('$(object)'), verb: false, required: true, referenceBy: gasProductTemplateComponentList,type:gas_product_template,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=gas_product_template_component, features=root} 

} depth=4; isRoot = false

gas_product{
	fields(15){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('食品添加剂氮气-20Mpa-50L-3*5集装格'), verb: false, required: true,type:string,relationMeta={};
		gas_cylinder	cylinder('$(object)'), verb: false, required: true, referenceBy: gasProductList,type:gas_cylinder,relationMeta={};
		fill_volume	fill_volume('$(object)'), verb: false, required: true, referenceBy: gasProductList,type:fill_volume,relationMeta={};
		gas_product_template	template('$(object)'), verb: false, required: false, referenceBy: gasProductList,type:gas_product_template,relationMeta={};
		product_status	status('$(object)'), verb: false, required: true, referenceBy: gasProductList,type:product_status,relationMeta={};
		int	quantity('1'), verb: false, required: true,type:int,relationMeta={};
		int	target_quantity('1'), verb: false, required: true,type:int,relationMeta={};
		int	threhold_quantity('1'), verb: false, required: true,type:int,relationMeta={};
		int	quantity_per_day('1'), verb: false, required: true,type:int,relationMeta={};
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: gasProductList,type:merchant,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: gasProductList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(3){
		gasProductComponentList	product(__no_group)--product;
		gasProductInventoryRecordList	product(__no_group)--product;
		gasLineItemList	product(__no_group)--product;
	}
	meta {name=gas_product, features=root} 

} depth=4; isRoot = false

gas_product_component{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		gas_component	component('$(object)'), verb: false, required: true, referenceBy: gasProductComponentList,type:gas_component,relationMeta={};
		double	percentage('0.1'), verb: false, required: true,type:double,relationMeta={};
		gas_product	product('$(object)'), verb: false, required: true, referenceBy: gasProductComponentList,type:gas_product,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=gas_product_component, features=root} 

} depth=5; isRoot = false

gas_product_inventory_record{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: gasProductInventoryRecordList,type:merchant,relationMeta={};
		gas_product	product('$(object)'), verb: false, required: true, referenceBy: gasProductInventoryRecordList,type:gas_product,relationMeta={};
		int	quantity('1'), verb: false, required: true,type:int,relationMeta={};
		int	update_quantity('1'), verb: false, required: true,type:int,relationMeta={};
		employee	actor('$(object)'), verb: false, required: true, referenceBy: gasProductInventoryRecordList,type:employee,relationMeta={};
		action_type	action('$(object)'), verb: false, required: true, referenceBy: gasProductInventoryRecordList,type:action_type,relationMeta={};
		string_longtext	comment('text()'), verb: false, required: true,type:text,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=gas_product_inventory_record, features=log} 

} depth=5; isRoot = false

gas_product_cache{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	product_id('GP000001'), verb: false, required: true,type:string,relationMeta={};
		string	merchant_id('M000001'), verb: false, required: true,type:string,relationMeta={};
		string_longtext	search_text('text()'), verb: false, required: true,type:text,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=gas_product_cache, features=root} 

} depth=0; isRoot = true

gas_product_template_cache{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	template_id('GPT000001'), verb: false, required: true,type:string,relationMeta={};
		string_longtext	search_text('text()'), verb: false, required: true,type:text,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=gas_product_template_cache, features=root} 

} depth=0; isRoot = true

deliver_task{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('2012年12月12日张三任务'), verb: false, required: true,type:string,relationMeta={};
		personal_user	deliver_staff('$(object)'), verb: false, required: true, referenceBy: deliverTaskList,type:personal_user,relationMeta={};
		merchant	merchant('$(object)'), verb: false, required: true, referenceBy: deliverTaskList,type:merchant,relationMeta={};
		deliver_task_status	status('$(object)'), verb: false, required: true, referenceBy: deliverTaskList,type:deliver_task_status,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		gasShippingGroupList	deliver_task(__no_group)--deliver_task;
	}
	meta {name=deliver_task, features=root} 

} depth=3; isRoot = false

main_order{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string_longtext	comment('text()'), verb: false, required: true,type:text,relationMeta={};
		merchant	buyer('$(object)'), verb: false, required: true, referenceBy: mainOrderListAsBuyer,type:merchant,relationMeta={};
		merchant	seller('$(object)'), verb: false, required: true, referenceBy: mainOrderListAsSeller,type:merchant,relationMeta={};
		order_status	status('$(object)'), verb: false, required: true, referenceBy: mainOrderList,type:order_status,relationMeta={};
		personal_user	creator('$(object)'), verb: false, required: true, referenceBy: mainOrderList,type:personal_user,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(4){
		gasLineItemList	main_order(__no_group)--main_order;
		gasShippingGroupList	main_order(__no_group)--main_order;
		deliveryReceiptList	main_order(__no_group)--main_order;
		orderOperationRecordList	main_order(__no_group)--main_order;
	}
	meta {name=main_order, features=root} 

} depth=3; isRoot = false

gas_line_item{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('食品添加剂氮气-20Mpa-50L-3*5集装格'), verb: false, required: true,type:string,relationMeta={};
		gas_cylinder	cylinder('$(object)'), verb: false, required: true, referenceBy: gasLineItemList,type:gas_cylinder,relationMeta={};
		gas_product	product('$(object)'), verb: false, required: true, referenceBy: gasLineItemList,type:gas_product,relationMeta={};
		gas_product_template	template('$(object)'), verb: false, required: false, referenceBy: gasLineItemList,type:gas_product_template,relationMeta={};
		int	quantity('1'), verb: false, required: true,type:int,relationMeta={};
		int	back_quantity('1'), verb: false, required: true,type:int,relationMeta={};
		string	components('90%氦+7%氩+3%二氧化碳'), verb: false, required: true,type:string,relationMeta={};
		main_order	main_order('$(object)'), verb: false, required: true, referenceBy: gasLineItemList,type:main_order,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(2){
		gasShippingGroupList	gas_line_item(__no_group)--gas_line_item;
		deliveryReceiptList	gas_line_item(__no_group)--gas_line_item;
	}
	meta {name=gas_line_item, features=root} 

} depth=5; isRoot = false

gas_shipping_group{
	fields(20){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		gas_line_item	gas_line_item('$(object)'), verb: false, required: true, referenceBy: gasShippingGroupList,type:gas_line_item,relationMeta={};
		main_order	main_order('$(object)'), verb: false, required: true, referenceBy: gasShippingGroupList,type:main_order,relationMeta={};
		int	quantity('1'), verb: false, required: true,type:int,relationMeta={};
		string	handover_address('天府三街'), verb: false, required: true,type:string,relationMeta={};
		string	seller_contact_name('张三'), verb: false, required: false,type:string,relationMeta={};
		string	seller_contact_phone('1213a'), verb: false, required: false,type:string,relationMeta={};
		string	buyer_contact_name('张三'), verb: false, required: true,type:string,relationMeta={};
		string	buyer_contact_phone('1213a'), verb: false, required: true,type:string,relationMeta={};
		date	handover_date('date_future()'), verb: false, required: true,type:date_future,relationMeta={};
		string	handover_time('上午|下午|3点-5点[0,20]'), verb: false, required: true,type:string,relationMeta={};
		deliver_type	shipping_type('$(object)'), verb: false, required: true, referenceBy: gasShippingGroupList,type:deliver_type,relationMeta={};
		shipping_status	shipping_status('$(object)'), verb: false, required: true, referenceBy: gasShippingGroupList,type:shipping_status,relationMeta={};
		deliver_task	deliver_task('$(object)'), verb: false, required: true, referenceBy: gasShippingGroupList,type:deliver_task,relationMeta={};
		merchant	seller('$(object)'), verb: false, required: true, referenceBy: gasShippingGroupListAsSeller,type:merchant,relationMeta={};
		merchant	buyer('$(object)'), verb: false, required: true, referenceBy: gasShippingGroupListAsBuyer,type:merchant,relationMeta={};
		employee	creator('$(object)'), verb: false, required: true, referenceBy: gasShippingGroupList,type:employee,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		deliveryReceiptList	gas_shipping_group(__no_group)--gas_shipping_group;
	}
	meta {name=gas_shipping_group, features=log} 

} depth=6; isRoot = false

delivery_receipt{
	fields(15){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		gas_shipping_group	gas_shipping_group('$(object)'), verb: false, required: true, referenceBy: deliveryReceiptList,type:gas_shipping_group,relationMeta={};
		gas_line_item	gas_line_item('$(object)'), verb: false, required: true, referenceBy: deliveryReceiptList,type:gas_line_item,relationMeta={};
		main_order	main_order('$(object)'), verb: false, required: true, referenceBy: deliveryReceiptList,type:main_order,relationMeta={};
		int	quantity('1'), verb: false, required: true,type:int,relationMeta={};
		int	back_quantity('1'), verb: false, required: true,type:int,relationMeta={};
		string_longtext	comment('text()'), verb: false, required: true,type:text,relationMeta={};
		merchant	seller('$(object)'), verb: false, required: true, referenceBy: deliveryReceiptListAsSeller,type:merchant,relationMeta={};
		merchant	buyer('$(object)'), verb: false, required: true, referenceBy: deliveryReceiptListAsBuyer,type:merchant,relationMeta={};
		employee	creator('$(object)'), verb: false, required: true, referenceBy: deliveryReceiptListAsCreator,type:employee,relationMeta={};
		employee	confirmer('$(object)'), verb: false, required: true, referenceBy: deliveryReceiptListAsConfirmer,type:employee,relationMeta={};
		delivery_receipt_status	status('$(object)'), verb: false, required: true, referenceBy: deliveryReceiptList,type:delivery_receipt_status,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		date	confirm_time('date()'), verb: false, required: true,type:date,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=delivery_receipt, features=root} 

} depth=7; isRoot = false

order_action_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('商家代客下单|客户下单|客户确认订单|商家代客户确认订单|商家确认订单|商家订单发货|商家创建交接单|客户确认交接单|商家代客户确认交接单|商家确认完成'), verb: false, required: true,type:string,relationMeta={};
		string	code('SELLER_CREATE_ORDER|BUYER_CREATE_ORDER|BUYER_CONFIRM|SELLER_FORCE_CONFIRM|SELLER_CONFIRM|SELLER_DELIVERY|SELLER_CREATE_DELIVERY_RECEIPT|BUYER_CONFIRM_DELIVERY_RECEIPT|SELLER_FORCE_CONFIRM_DELIVERY_RECEIPT|SELLER_CONFIRM_DONE'), verb: false, required: true,type:string,relationMeta={};
		string	description('代客下单|客户下单|客户确认订单|商家代客户确认订单|商家确认订单|商家订单发货|商家创建交接单|客户确认交接单|商家代客户确认交接单|商家确认完成'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: orderActionTypeList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		orderOperationRecordList	action(__no_group)--action;
	}
	meta {name=order_action_type, features=status} 

} depth=1; isRoot = false

order_operation_record{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		main_order	main_order('$(object)'), verb: false, required: true, referenceBy: orderOperationRecordList,type:main_order,relationMeta={};
		employee	actor('$(object)'), verb: false, required: true, referenceBy: orderOperationRecordList,type:employee,relationMeta={};
		order_action_type	action('$(object)'), verb: false, required: true, referenceBy: orderOperationRecordList,type:order_action_type,relationMeta={};
		string	comment('代张三下单|代双链科技下单'), verb: false, required: false,type:string,relationMeta={};
		string_longtext	detail('text()'), verb: false, required: true,type:text,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=order_operation_record, features=log} 

} depth=4; isRoot = false

icon_configuration{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('历史记录'), verb: false, required: true,type:string,relationMeta={};
		string	code('HISTORY_TASK'), verb: false, required: true,type:string,relationMeta={};
		string	description('设备详情页的 历史记录 的图标'), verb: false, required: true,type:string,relationMeta={};
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: iconConfigurationList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=icon_configuration, features=status} 

} depth=1; isRoot = false

system_level_configuration{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('反馈邮箱|联系电话'), verb: false, required: true,type:string,relationMeta={};
		string	code('FEEDBACK_EMAIL|SERVICE_MOBILE'), verb: false, required: true,type:string,relationMeta={};
		string	value('opensw001@gmail.com|800-12345678'), verb: false, required: true,type:string,relationMeta={};
		string	description('反馈意见的联系邮箱|客服电话'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: systemLevelConfigurationList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=system_level_configuration, features=status} 

} depth=1; isRoot = false

system_level_images{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('默认用户头像|默认工厂图片|平台推广图片'), verb: false, required: true,type:string,relationMeta={};
		string	code('PERSONAL_AVATAR|FACTORY_LOGO|PLATFORM_BANNER'), verb: false, required: true,type:string,relationMeta={};
		string_image	value('example.jpg'), verb: false, required: true,type:string_image,relationMeta={};
		string_url	link_to_url('https://www.baidu.com/some.mp4'), verb: false, required: false,type:string_url,relationMeta={};
		string	description('个人用户的默认头像|工厂的默认图像|平台推广图片'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: systemLevelImagesList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=system_level_images, features=status} 

} depth=1; isRoot = false

system_level_content{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('联系我们'), verb: false, required: true,type:string,relationMeta={};
		string	code('CONTACT_US'), verb: false, required: true,type:string,relationMeta={};
		string_longtext	value('richText()'), verb: false, required: true,type:richText,relationMeta={};
		string	description(''联系我们' 的页面内容'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: systemLevelContentList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=system_level_content, features=status} 

} depth=1; isRoot = false

system_level_number{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('例:审核超时(小时)'), verb: false, required: true,type:string,relationMeta={};
		string	code('REVIEW_TIMEOUT'), verb: false, required: true,type:string,relationMeta={};
		double	value('0000000008.0000000'), verb: false, required: true,type:double,relationMeta={};
		double	min_value('0000000000.0000000'), verb: false, required: true,type:double,relationMeta={};
		double	max_value('0000000168.0000000'), verb: false, required: true,type:double,relationMeta={};
		string	description('审核任务的超时时间. 单位是小时. 默认8小时. 0表示不会超时'), verb: false, required: true,type:string,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: systemLevelNumberList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=system_level_number, immutable_fields=code,min_value,max_value, features=status} 

} depth=1; isRoot = false

system_announcement{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	content('2020年9月30日系统维护|二维码铭牌免费升级活动'), verb: false, required: true,type:string,relationMeta={};
		string_url	link_to_url('https://www.jiezhichuangxiu/ad/12343545'), verb: false, required: false,type:string_url,relationMeta={};
		date_time	start_time('2199-12-31T23:59:59'), verb: false, required: true,type:date_time,relationMeta={};
		date_time	end_time('2199-12-31T23:59:59'), verb: false, required: true,type:date_time,relationMeta={};
		mobile_app	mobile_app('$(object)'), verb: false, required: true, referenceBy: systemAnnouncementList,type:mobile_app,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=system_announcement, features=root} 

} depth=1; isRoot = false

guide_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('新卖家|卖家|新买家|买家'), verb: false, required: true,type:string,relationMeta={};
		string	code('NEW_SELLER|SELLER|NEW_BUYER|BUYER'), verb: false, required: true,type:string,relationMeta={};
		mobile_app	app('$(object)'), verb: false, required: true, referenceBy: guideTypeList,type:mobile_app,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		guideSlideList	guide_type(__no_group)--guide_type;
	}
	meta {name=guide_type, features=status} 

} depth=1; isRoot = false

guide_slide{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		guide_type	guide_type('$(object)'), verb: false, required: true, referenceBy: guideSlideList,type:guide_type,relationMeta={};
		string	title('注册成功|快速下单|模拟发货'), verb: false, required: false,type:string,relationMeta={};
		string_image	image('machine.jpg|bottle.jpg'), verb: false, required: true,type:string_image,relationMeta={};
		string_longtext	description('richText()'), verb: false, required: false,type:richText,relationMeta={};
		string_url	link_url('http://www.think-to.com'), verb: false, required: false,type:string_url,relationMeta={};
		int	display_order('1|2|3|4|5'), verb: false, required: true,type:int,relationMeta={};
		mobile_app	app('$(object)'), verb: false, required: true, referenceBy: guideSlideList,type:mobile_app,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=guide_slide, features=root} 

} depth=2; isRoot = false

change_request_type{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('信息反馈|商户注册|产品附加规格|确认加入|完善信息并入库|修改附加规格|创建交接单|入库|自定义|编辑备注|更新个人信息|完善信息|确认|批准加入|完善信息|转移管理员|完善配送|审核加入|修改产品|完善信息|备注|产品附加规格|商户基础信息|修改配送信息|完善信息|修改附加规格|上架|提交客户审核|同意代下|完成审核|自定义产品|配送信息|复制产品|修改订单|完善信息|设置商户下班时间|提交新单|审批加入+姓名|设置单次配送最大量|转移管理员|自定义|编辑配送任务|产品附加规格|下架|完善信息|创建配送任务|备注|代客确认|确认交接|完善信息'), verb: false, required: true,type:string,relationMeta={};
		string	code('MORE_SUPPLIER_PRODUCT|SELLER_REGISTER|EDIT_ADDITIONAL_SPEC_WHEN_INIT|CONFIRM_JOIN|UPDATE_MERCHANT_INFO_WHEN_INBOUND|EDIT_ADDITIONAL_SPEC_WHEN_CREATE_IN_QUOTE|CREATE_HANDOVER_TASK|PRODUCT_INBOUND|CUSTOM_PRODUCT_WHEN_QUOTE_BY_PRODUCT|EDIT_COMMENT|UPDATE_PERSONAL_INFO|UPDATE_MERCHANT_INFO_FROM_SELLER_HOME|BUYER_BIC_CONFIRM|APPROVE_JOIN_BUYER|UPDATE_BUYER_INFO_WHEN_CONFIRM_QUOTE|COMPANY_ADMIN_TRANSFER|BUYER_UPDATE_DELIVERY_INFO|BUYER|UPDATE_PRODUCT_INFO|UPDATE_MERCHANT_INFO_WHEN_QUOTE|UPDATE_COLLEAGUE_INFO|EDIT_ADDITIONAL_SPEC_WHEN_QUOTE|UPDATE_COMPANY_INFO|UPDATE_DELIVERY_INFO|UPDATE_MERCHANT_INFO_WHEN_VIEW_BUYER|EDIT_ADDITIONAL_SPEC_WHEN_CREATE|PRODUCT_ON_SHELF|SEND_TO_CUSTOMER_AUDIT|CONFIRM_QUOTE|AUDIT_ORDER|CUSTOM_PRODUCT_WHEN_INITIAL|BUYER_DELIVERY_INFO|COPY_PRODUCT|BUYER_UPDATE_ORDER|SELLER_UPDATE_MERCHANT_INFO|UPDATE_MERCHANT_OFF_TIME|CREATE_SPLIT_ORDER|AUDIT_JOIN_APPLY|UPDATE_MERCHANT_DELIVERY_LIMIT|BUYER_ADMIN_TRANSFER|CUSTOM_PRODUCT_WHEN_QUOTE|UPDATE_DELIVERY_TASK|EDIT_ADDITIONAL_SPEC_WHEN_REVIEW_INIT|PRODUCT_OFF_SHELF|UPDATE_MERCHANT_INFO_WHEN_INVITE|CREATE_DELIVERY_TASK|EDIT_BUYER_COLLEAGUE|CONFIRM_AS_CUSTOMER|CONFIRM_DELIVERY_TASK|UPDATE_BUYER_INFO_WHEN_ORDER'), verb: false, required: true,type:string,relationMeta={};
		string	icon('bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars|bars'), verb: false, required: true,type:string,relationMeta={};
		int	display_order('1|2|3|4|5|6'), verb: false, required: true,type:int,relationMeta={};
		string_longtext	bind_types('text()'), verb: false, required: true,type:text,relationMeta={};
		string_longtext	step_configuration('text()'), verb: false, required: true,type:text,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: changeRequestTypeList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(2){
		changeRequestList	request_type(__no_group)--request_type;
		eventInfoInCrList	change_request_type(__no_group)--change_request_type;
	}
	meta {name=change_request_type, identified_by=code, features=cr_type} 

} depth=1; isRoot = false

change_request{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('注册|开始考试|答题'), verb: false, required: true,type:string,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		string_client_ip	remote_ip('remoteIp()'), verb: false, required: true,type:string_client_ip,relationMeta={};
		string	city_by_ip('四川省成都市|新疆维吾尔自治区阿卡大礼县'), verb: false, required: false,type:string,relationMeta={};
		change_request_type	request_type('$(object)'), verb: false, required: true, referenceBy: changeRequestList,type:change_request_type,relationMeta={};
		bool	commited('false'), verb: false, required: true,type:bool,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: changeRequestList,type:platform,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(8){
		eventTbdList	change_request(__no_group)--change_request;
		eventSellerInfoList	change_request(__no_group)--change_request;
		eventAdminTransferList	change_request(__no_group)--change_request;
		eventUpdateMerchantOffTimeList	change_request(__no_group)--change_request;
		eventUpdateMerchantDeliveryLimitList	change_request(__no_group)--change_request;
		eventEmployeeApproveList	change_request(__no_group)--change_request;
		eventUpdateAdditionalSpecList	change_request(__no_group)--change_request;
		eventInfoInCrList	change_request(__no_group)--change_request;
	}
	meta {name=change_request, features=change_request} 

} depth=2; isRoot = false

event_tbd{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	tbd('tbd|字段待定义'), verb: false, required: true,type:string,relationMeta={};
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventTbdList,type:change_request,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {bind_with_cr_type=MORE_SUPPLIER_PRODUCT|CONFIRM_JOIN|UPDATE_MERCHANT_INFO_WHEN_INBOUND|CREATE_HANDOVER_TASK|PRODUCT_INBOUND|CUSTOM_PRODUCT_WHEN_QUOTE_BY_PRODUCT|EDIT_COMMENT|UPDATE_PERSONAL_INFO|BUYER_BIC_CONFIRM|UPDATE_BUYER_INFO_WHEN_CONFIRM_QUOTE|BUYER_UPDATE_DELIVERY_INFO|BUYER|UPDATE_PRODUCT_INFO|UPDATE_MERCHANT_INFO_WHEN_QUOTE|UPDATE_COMPANY_INFO|UPDATE_DELIVERY_INFO|UPDATE_MERCHANT_INFO_WHEN_VIEW_BUYER|PRODUCT_ON_SHELF|SEND_TO_CUSTOMER_AUDIT|CONFIRM_QUOTE|AUDIT_ORDER|CUSTOM_PRODUCT_WHEN_INITIAL|BUYER_DELIVERY_INFO|COPY_PRODUCT|BUYER_UPDATE_ORDER|CREATE_SPLIT_ORDER|CUSTOM_PRODUCT_WHEN_QUOTE|UPDATE_DELIVERY_TASK|PRODUCT_OFF_SHELF|CREATE_DELIVERY_TASK|EDIT_BUYER_COLLEAGUE|CONFIRM_AS_CUSTOMER|CONFIRM_DELIVERY_TASK|UPDATE_BUYER_INFO_WHEN_ORDER, name=event_tbd, features=event} 

} depth=3; isRoot = false

event_seller_info{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('name|单位名称'), verb: false, required: true,type:string,relationMeta={};
		string	agency_social_code('agency social code|信用代码'), verb: false, required: true,type:string,relationMeta={};
		string	contact_name('contact name|联系人'), verb: false, required: true,type:string,relationMeta={};
		string_china_mobile_phone	contact_mobile('13300001234'), verb: false, required: true,type:string_china_mobile_phone,relationMeta={};
		string	address('address|单位地址'), verb: false, required: true,type:string,relationMeta={};
		string_image	logo('logo.jpg'), verb: false, required: true,type:string_image,relationMeta={};
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventSellerInfoList,type:change_request,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {bind_with_cr_type=SELLER_REGISTER|UPDATE_MERCHANT_INFO_FROM_SELLER_HOME|SELLER_UPDATE_MERCHANT_INFO|UPDATE_MERCHANT_INFO_WHEN_INVITE, name=event_seller_info, features=event} 

} depth=3; isRoot = false

event_admin_transfer{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	merchant_id('merchant id|组织ID'), verb: false, required: true,type:string,relationMeta={};
		personal_user	new_admin('$(object)'), verb: false, required: true, referenceBy: eventAdminTransferList,type:personal_user,relationMeta={};
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventAdminTransferList,type:change_request,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {bind_with_cr_type=COMPANY_ADMIN_TRANSFER|BUYER_ADMIN_TRANSFER, name=event_admin_transfer, features=event} 

} depth=3; isRoot = false

event_update_merchant_off_time{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	merchant_id('merchant id|组织ID'), verb: false, required: true,type:string,relationMeta={};
		off_time	off_time('$(object)'), verb: false, required: true, referenceBy: eventUpdateMerchantOffTimeList,type:off_time,relationMeta={};
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventUpdateMerchantOffTimeList,type:change_request,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {bind_with_cr_type=UPDATE_MERCHANT_OFF_TIME, name=event_update_merchant_off_time, features=event} 

} depth=3; isRoot = false

event_update_merchant_delivery_limit{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	merchant_id('merchant id|组织ID'), verb: false, required: true,type:string,relationMeta={};
		string	delivery_limit('delivery limit|最大值'), verb: false, required: true,type:string,relationMeta={};
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventUpdateMerchantDeliveryLimitList,type:change_request,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {bind_with_cr_type=UPDATE_MERCHANT_DELIVERY_LIMIT, name=event_update_merchant_delivery_limit, features=event} 

} depth=3; isRoot = false

event_employee_approve{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	employee_id('employee id|被批准的岗位'), verb: false, required: true,type:string,relationMeta={};
		string	name('name|姓名'), verb: false, required: false,type:string,relationMeta={};
		string_china_mobile_phone	mobile('13300001234'), verb: false, required: false,type:string_china_mobile_phone,relationMeta={};
		string	employee_comment('employee comment|员工备注'), verb: false, required: false,type:string,relationMeta={};
		string_longtext	approve_comment('text()'), verb: false, required: false,type:text,relationMeta={};
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventEmployeeApproveList,type:change_request,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {bind_with_cr_type=APPROVE_JOIN_BUYER|UPDATE_COLLEAGUE_INFO|AUDIT_JOIN_APPLY, name=event_employee_approve, features=event} 

} depth=3; isRoot = false

event_update_additional_spec{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	scene('scene|使用场景'), verb: false, required: true,type:string,relationMeta={};
		string	template_id('template id|产品模板'), verb: false, required: false,type:string,relationMeta={};
		string	product_id('product id|产品'), verb: false, required: false,type:string,relationMeta={};
		string	merchant_id('merchant id|商户'), verb: false, required: true,type:string,relationMeta={};
		string	additional_spec('additional spec|附加规格'), verb: false, required: false,type:string,relationMeta={};
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventUpdateAdditionalSpecList,type:change_request,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {bind_with_cr_type=EDIT_ADDITIONAL_SPEC_WHEN_INIT|EDIT_ADDITIONAL_SPEC_WHEN_CREATE_IN_QUOTE|EDIT_ADDITIONAL_SPEC_WHEN_QUOTE|EDIT_ADDITIONAL_SPEC_WHEN_CREATE|EDIT_ADDITIONAL_SPEC_WHEN_REVIEW_INIT, name=event_update_additional_spec, features=event} 

} depth=3; isRoot = false

event_info_in_cr{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		change_request	change_request('$(object)'), verb: false, required: true, referenceBy: eventInfoInCrList,type:change_request,relationMeta={};
		change_request_type	change_request_type('$(object)'), verb: false, required: true, referenceBy: eventInfoInCrList,type:change_request_type,relationMeta={};
		string	status('OPENING|COMMITTED|PRESET'), verb: false, required: true,type:string,relationMeta={};
		string	initiator_type('SecUser|Merchant'), verb: false, required: true,type:string,relationMeta={};
		string	initiator_id('SU000001|M0000001'), verb: false, required: true,type:string,relationMeta={};
		string_longtext	events_info('text()'), verb: false, required: true,type:text,relationMeta={};
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=event_info_in_cr, features=root, max_count=1000000000} 

} depth=3; isRoot = false

system_processing_instance{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	title('提现流程|拍卖流程'), verb: false, required: true,type:string,relationMeta={};
		string	type('WITHDRAW|BIDDING'), verb: false, required: true,type:string,relationMeta={};
		string	target_identity('DemandProposal_DP000001|ArtworkAuction_AA000001'), verb: false, required: true,type:string,relationMeta={};
		string	brief('红星造纸厂提现|《远秋近春》拍卖'), verb: false, required: true,type:string,relationMeta={};
		string_longtext	detail('text()'), verb: false, required: true,type:text,relationMeta={};
		platform	platform('$(object)'), verb: false, required: true, referenceBy: systemProcessingInstanceList,type:platform,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=system_processing_instance, features=log,settings,no_sample_data, identified_by=target_identity} 

} depth=1; isRoot = false

mobile_app{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('移动端配置'), verb: false, required: true,type:string,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(5){
		systemAnnouncementList	mobile_app(__no_group)--mobile_app;
		guideTypeList	app(__no_group)--app;
		guideSlideList	app(__no_group)--app;
		pageList	mobile_app(页面管理)--mobile_app;
		pageTypeList	mobile_app(__no_group)--mobile_app;
	}
	meta {name=mobile_app, features=root} 

} depth=0; isRoot = true

page{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	page_title('首页'), verb: false, required: true,type:string,relationMeta={};
		string	link_to_url('首页'), verb: false, required: true,type:string,relationMeta={};
		page_type	page_type('$(object)'), verb: false, required: true, referenceBy: pageList,type:page_type,relationMeta={};
		int	display_order('1|2|3'), verb: false, required: true,type:int,relationMeta={};
		mobile_app	mobile_app('$(object)'), verb: false, required: true, referenceBy: pageList,type:mobile_app,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(3){
		slideList	page(__no_group)--page;
		uiActionList	page(__no_group)--page;
		sectionList	page(__no_group)--page;
	}
	meta {name=page, features=root, vg4mobile_app=页面管理} 

} depth=2; isRoot = false

page_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('首页|我的|Generic Page|Listof Page|功能大厅|普通'), verb: false, required: true,type:string,relationMeta={};
		string	code('home|me|generic-page|listof-page|service-center|simple'), verb: false, required: true,type:string,relationMeta={};
		mobile_app	mobile_app('$(object)'), verb: false, required: true, referenceBy: pageTypeList,type:mobile_app,relationMeta={};
		bool	footer_tab('true|false'), verb: false, required: true,type:bool,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		pageList	page_type(__no_group)--page_type;
	}
	meta {name=page_type, features=status, identified_by=code} 

} depth=1; isRoot = false

slide{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('首页Focus的内容'), verb: false, required: true,type:string,relationMeta={};
		int	display_order('1|2|3'), verb: false, required: true,type:int,relationMeta={};
		string_image	image_url('https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_1.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_2.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_3.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_4.jpg'), verb: false, required: true,type:string_image,relationMeta={};
		string_image	video_url('https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_1.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_2.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_3.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_4.jpg'), verb: false, required: true,type:string_image,relationMeta={};
		string	link_to_url('|/section/article/'), verb: false, required: false,type:string,relationMeta={};
		page	page('$(object)'), verb: false, required: true, referenceBy: slideList,type:page,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=slide, features=root} 

} depth=3; isRoot = false

ui_action{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	code('submit|share|view|more'), verb: false, required: true,type:string,relationMeta={};
		string	icon('icon_edit|icon_share|icon_eye|icon_more'), verb: false, required: true,type:string,relationMeta={};
		string	title('提交|分享|查看|更多'), verb: false, required: true,type:string,relationMeta={};
		int	display_order('1|2|3'), verb: false, required: true,type:int,relationMeta={};
		string	brief('Submit|Share|View|View More'), verb: false, required: true,type:string,relationMeta={};
		string_image	image_url('https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_1.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_2.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_3.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_4.jpg'), verb: false, required: true,type:string_image,relationMeta={};
		string	link_to_url('wxappService/section/article/'), verb: false, required: true,type:string,relationMeta={};
		string_longtext	extra_data('text()'), verb: false, required: true,type:text,relationMeta={};
		page	page('$(object)'), verb: false, required: true, referenceBy: uiActionList,type:page,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=ui_action, features=root} 

} depth=3; isRoot = false

section{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	title('文章|作品'), verb: false, required: true,type:string,relationMeta={};
		string	brief('Article|Artwork'), verb: false, required: true,type:string,relationMeta={};
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image,relationMeta={};
		int	display_order('1|2|3'), verb: false, required: true,type:int,relationMeta={};
		string	view_group('icon_edit|icon_share|icon_eye|icon_more'), verb: false, required: true,type:string,relationMeta={};
		string	link_to_url('wxappService/section/article/'), verb: false, required: true,type:string,relationMeta={};
		page	page('$(object)'), verb: false, required: true, referenceBy: sectionList,type:page,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=section, features=root} 

} depth=3; isRoot = false

user_domain{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('用户区域'), verb: false, required: true,type:string,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(3){
		userAllowListList	domain(__no_group)--domain;
		secUserList	domain(__no_group)--domain;
		publicKeyTypeList	domain(__no_group)--domain;
	}
	meta {name=user_domain, features=ootb} 

} depth=0; isRoot = true

user_allow_list{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string_china_mobile_phone	user_identity('13308188512|13808188512'), verb: false, required: true,type:string_china_mobile_phone,relationMeta={};
		string	user_special_functions(';supervisor;|;tester;ios-spokesperson;'), verb: false, required: true,type:string,relationMeta={};
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: userAllowListList,type:user_domain,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=user_allow_list, features=syssetting} 

} depth=1; isRoot = false

sec_user{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	login('login'), verb: false, required: true,type:string,relationMeta={};
		string_china_mobile_phone	mobile('13900000001'), verb: false, required: true,type:string_china_mobile_phone,relationMeta={};
		string_email	email('suddy_chang@163.com'), verb: false, required: true,type:string_email,relationMeta={};
		string_password	pwd('*******'), verb: false, required: true,type:string_password,relationMeta={};
		string	weixin_openid('wx123456789abcdefghijklmn'), verb: false, required: true,type:string,relationMeta={};
		string	weixin_appid('wxapp12098410239840'), verb: false, required: true,type:string,relationMeta={};
		string	access_token('jwt_token_12345678'), verb: false, required: true,type:string,relationMeta={};
		int	verification_code('0|9999999'), verb: false, required: true,type:int,relationMeta={};
		date_time	verification_code_expire('2099-12-31T09:09:09'), verb: false, required: true,type:date_time,relationMeta={};
		date_time	last_login_time('2099-12-31T09:09:09'), verb: false, required: false,type:date_time,relationMeta={};
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: secUserList,type:user_domain,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(5){
		userAppList	sec_user(__no_group)--sec_user;
		loginHistoryList	sec_user(__no_group)--sec_user;
		wechatWorkappIdentityList	sec_user(__no_group)--sec_user;
		wechatMiniappIdentityList	sec_user(__no_group)--sec_user;
		keypairIdentityList	sec_user(__no_group)--sec_user;
	}
	meta {name=sec_user, features=ootb, identified_by=login,email,mobile} 

} depth=1; isRoot = false

user_app{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	title('审车平台|账户管理|接车公司|审车公司|维修公司|顾客'), verb: false, required: true,type:string,relationMeta={};
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: userAppList,type:sec_user,relationMeta={};
		string	app_icon('users|bank|wechat|bar-chart|user|users'), verb: false, required: true,type:string,relationMeta={};
		bool	full_access('true'), verb: false, required: true,type:bool,relationMeta={};
		string	permission('MXWR|MXWR'), verb: false, required: true,type:string,relationMeta={};
		string	object_type('CarInspectionPlatform|UserDomain|CarReceivingServiceCompany|CarInspectionServiceCompany|CarRepairingServiceCompany|CustomerInfo'), verb: false, required: true,type:string,relationMeta={};
		string	object_id('CIP000001|UD000001|CRSC000001|CISC000001|CRSC000001|CI000001'), verb: false, required: true,type:string,relationMeta={};
		string	location('/link/to/app'), verb: false, required: true,type:string,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(2){
		quickLinkList	app(__no_group)--app;
		listAccessList	app(__no_group)--app;
	}
	meta {name=user_app, features=ootb} 

} depth=2; isRoot = false

quick_link{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('列表'), verb: false, required: true,type:string,relationMeta={};
		string	icon('facebook|google'), verb: false, required: true,type:string,relationMeta={};
		string_image	image_path('y-200-200-red.jpg'), verb: false, required: true,type:string_image,relationMeta={};
		string	link_target('列表'), verb: false, required: true,type:string,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		user_app	app('$(object)'), verb: false, required: true, referenceBy: quickLinkList,type:user_app,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=quick_link, features=ootb} 

} depth=3; isRoot = false

list_access{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('列表'), verb: false, required: true,type:string,relationMeta={};
		string	internal_name('levelOneCategoryList'), verb: false, required: true,type:string,relationMeta={};
		bool	read_permission('true'), verb: false, required: true,type:bool,relationMeta={};
		bool	create_permission('true'), verb: false, required: true,type:bool,relationMeta={};
		bool	delete_permission('true'), verb: false, required: true,type:bool,relationMeta={};
		bool	update_permission('true'), verb: false, required: true,type:bool,relationMeta={};
		bool	execution_permission('true'), verb: false, required: true,type:bool,relationMeta={};
		user_app	app('$(object)'), verb: false, required: true, referenceBy: listAccessList,type:user_app,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=list_access, features=ootb} 

} depth=3; isRoot = false

login_history{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		date_time_create	login_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		string	from_ip('192.168.1.1|192.168.1.2'), verb: false, required: true,type:string,relationMeta={};
		string	description('登陆成功'), verb: false, required: true,type:string,relationMeta={};
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: loginHistoryList,type:sec_user,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=login_history, features=syslog} 

} depth=2; isRoot = false

candidate_container{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('我只是一个容器'), verb: false, required: true,type:string,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		candidateElementList	container(__no_group)--container;
	}
	meta {name=candidate_container, features=internal,ootb} 

} depth=0; isRoot = true

candidate_element{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	name('搜索到的匹配字段'), verb: false, required: true,type:string,relationMeta={};
		string	type('类型描述'), verb: false, required: true,type:string,relationMeta={};
		string_image	image('1.jpg'), verb: false, required: true,type:string_image,relationMeta={};
		candidate_container	container('$(object)'), verb: false, required: true, referenceBy: candidateElementList,type:candidate_container,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=candidate_element, features=internal,ootb} 

} depth=1; isRoot = false

wechat_workapp_identity{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	corp_id('corporation123'), verb: false, required: true,type:string,relationMeta={};
		string	user_id('user123'), verb: false, required: true,type:string,relationMeta={};
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: wechatWorkappIdentityList,type:sec_user,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		date_time	last_login_time('2100-01-01T00:00:00'), verb: false, required: false,type:date_time,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=wechat_workapp_identity, features=root} 

} depth=2; isRoot = false

wechat_miniapp_identity{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	open_id('wechat_open_id_1234567890'), verb: false, required: true,type:string,relationMeta={};
		string	app_id('wechat_miniapp_id_1234567890'), verb: false, required: true,type:string,relationMeta={};
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: wechatMiniappIdentityList,type:sec_user,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		date_time	last_login_time('2100-01-01T00:00:00'), verb: false, required: false,type:date_time,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=wechat_miniapp_identity, features=root} 

} depth=2; isRoot = false

keypair_identity{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string_longtext	public_key('text()'), verb: false, required: true,type:text,relationMeta={};
		public_key_type	key_type('$(object)'), verb: false, required: true, referenceBy: keypairIdentityList,type:public_key_type,relationMeta={};
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: keypairIdentityList,type:sec_user,relationMeta={};
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=keypair_identity, features=root} 

} depth=2; isRoot = false

public_key_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	key_alg('RSA|EC'), verb: false, required: true,type:string,relationMeta={};
		string	sign_alg('SHA256withRSA|SHA256withECDSA'), verb: false, required: true,type:string,relationMeta={};
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: publicKeyTypeList,type:user_domain,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(1){
		keypairIdentityList	key_type(__no_group)--key_type;
	}
	meta {name=public_key_type, features=root} 

} depth=1; isRoot = false

tree_node{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id,relationMeta={};
		string	node_id('node000001'), verb: false, required: true,type:string,relationMeta={};
		string	node_type('nodetype'), verb: false, required: true,type:string,relationMeta={};
		int	left_value('1'), verb: false, required: true,type:int,relationMeta={};
		int	right_value('10'), verb: false, required: true,type:int,relationMeta={};
		int	version('2147483647'), verb: false, required: true,type:version,relationMeta={};
	}
	references field(0){
	}
	meta {name=tree_node, features=root} 

} depth=0; isRoot = true




=================================End Report=================================
